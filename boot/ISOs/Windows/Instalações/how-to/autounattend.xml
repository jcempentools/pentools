<?xml version="1.0" encoding="utf-8"?>
<unattend xmlns="urn:schemas-microsoft-com:unattend" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
	<!--https://schneegans.de/windows/unattend-generator/?LanguageMode=Unattended&UILanguage=pt-BR&Locale=pt-BR&Keyboard=00010416&GeoLocation=32&ProcessorArchitecture=amd64&BypassRequirementsCheck=true&BypassNetworkCheck=true&ComputerNameMode=Random&CompactOsMode=Default&TimeZoneMode=Explicit&TimeZone=E.+South+America+Standard+Time&PartitionMode=Interactive&WindowsEditionMode=Custom&ProductKey=VK7JG-NPHTM-C97JM-9MPGT-3V66T&UserAccountMode=Unattended&AccountName0=admin&AccountPassword0=12345678&AccountGroup0=Administrators&AccountName1=&AccountName2=&AccountName3=&AccountName4=&AutoLogonMode=Own&ObscurePasswords=true&PasswordExpirationMode=Unlimited&LockoutMode=Default&HideFiles=HiddenSystem&ShowFileExtensions=true&ClassicContextMenu=true&LaunchToThisPC=true&TaskbarSearch=Hide&TaskbarIconsMode=Empty&DisableWidgets=true&LeftTaskbar=true&HideTaskViewButton=true&DisableBingResults=true&StartTilesMode=Empty&StartPinsMode=Empty&DisableSystemRestore=true&EnableLongPaths=true&AllowPowerShellScripts=true&PreventAutomaticReboot=true&TurnOffSystemSounds=true&DisableAppSuggestions=true&PreventDeviceEncryption=true&HideEdgeFre=true&MakeEdgeUninstallable=true&DisablePointerPrecision=true&DeleteWindowsOld=true&VBoxGuestAdditions=true&WifiMode=Skip&ExpressSettings=DisableAll&KeysMode=Configure&CapsLockInitial=Off&CapsLockBehavior=Toggle&NumLockInitial=On&NumLockBehavior=Toggle&ScrollLockInitial=Off&ScrollLockBehavior=Toggle&ColorMode=Custom&SystemColorTheme=Dark&AppsColorTheme=Dark&AccentColor=%23323232&AccentColorOnStart=true&AccentColorOnBorders=true&EnableTransparency=true&WallpaperMode=Script&WallpaperScript=%24url+%3D+%27https%3A%2F%2F4kwallpapers.com%2Fimages%2Fwallpapers%2Fmacro-surface-3d-background-sci-fi-purple-background-3840x2160-7863.png%27%3B%0D%0Areturn+%28+Invoke-WebRequest+-Uri+%24url+-UseBasicParsing+-TimeoutSec+30+%29.Content%3B&RemoveBingSearch=true&RemoveCamera=true&RemoveClipchamp=true&RemoveClock=true&RemoveCopilot=true&RemoveCortana=true&RemoveDevHome=true&RemoveFamily=true&RemoveFeedbackHub=true&RemoveGetHelp=true&RemoveHandwriting=true&RemoveInternetExplorer=true&RemoveMailCalendar=true&RemoveMaps=true&RemoveMathInputPanel=true&RemoveMediaFeatures=true&RemoveMixedReality=true&RemoveZuneVideo=true&RemoveNews=true&RemoveOffice365=true&RemoveOneDrive=true&RemoveOneNote=true&RemoveOneSync=true&RemoveOpenSSHClient=true&RemoveOutlook=true&RemovePaint3D=true&RemovePeople=true&RemovePowerAutomate=true&RemovePowerShell2=true&RemoveQuickAssist=true&RemoveRecall=true&RemoveRdpClient=true&RemoveSkype=true&RemoveSnippingTool=true&RemoveSolitaire=true&RemoveSpeech=true&RemoveStepsRecorder=true&RemoveTeams=true&RemoveGetStarted=true&RemoveToDo=true&RemoveVoiceRecorder=true&RemoveWallet=true&RemoveWeather=true&RemoveFaxAndScan=true&RemoveWindowsHello=true&RemoveWindowsMediaPlayer=true&RemoveZuneMusic=true&RemoveWordPad=true&RemoveXboxApps=true&RemoveYourPhone=true&SystemScript0=powercfg.exe+-h+off&SystemScriptType0=Cmd&SystemScript1=Set-MpPreference+-DisableRealtimeMonitoring+%24true%3B&SystemScriptType1=Ps1&SystemScript2=try+%7B%0D%0A++Set-Volume+-DriveLetter+C+-NewFileSystemLabel+%22SISTEMA%22%0D%0A%7D%0D%0Acatch+%7B+%0D%0A++write-host+%22%3F%3F%3F%3F%3F+falha+ao+renomear+disco+do+sistema%22%0D%0A%7D%0D%0A&SystemScriptType2=Ps1&SystemScript3=Param%28%0D%0A++%5Bstring%5D%24is_test++++%0D%0A%29%0D%0A%0D%0A%24path_log+%3D+%22c%3A%5Cappinstall.log%22%0D%0A%24pwsh_msi_path+%3D+%22c%3A%5Cpwsh_install.msi%22%0D%0A%24pendrive_add_script+%3D+%22boot%5Cappinstall%5Cwindows%22%0D%0A%24image_folder+%3D+%22C%3A%5CUsers%5CDefault%5CPictures%22%0D%0A%0D%0Atry+%7B%0D%0A++Set-ExecutionPolicy+-ExecutionPolicy+Bypass+-Force%0D%0A%7D%0D%0Acatch+%7B+%0D%0A++write-host+%22%3F%3F%3F%3F%3F+falha+ao+setar+pol%C3%ADtica+de+execu%C3%A7ao.%22%0D%0A%7D%0D%0A%0D%0Aif+%28-Not+%28Test-Path+-Path+%22%24path_log%5C%22%29%29+%7B%0D%0A++New-Item+-Path+%22%24path_log%22+-Force+-ItemType+Directory++%0D%0A%7D%0D%0A%0D%0Aif+%28-Not+%28Test-Path+-Path+%22%24path_log%5Capps%22%29%29+%7B++%0D%0A++New-Item+-Path+%22%24path_log%5Capps%5C%22+-Force+-ItemType+Directory%0D%0A%7D%0D%0A%0D%0Atry+%7B%0D%0A++%24name_install_log+%3D+%24env%3AUSERNAME%0D%0A++%0D%0A++if+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24name_install_log%29%29+%7B++%0D%0A++++%24name_install_log+%3D+%28%5BSystem.Security.Principal.WindowsIdentity%5D%3A%3AGetCurrent%28%29.Name%29.Replace%28%22%5C%22%2C+%22-%22%29%0D%0A++%7D%0D%0A%0D%0A++%24i+%3D+0%0D%0A++for+%28%3B+Test-Path+%22%24path_log%5Cauto-install-%24name_install_log.%24i.log%22%3B+%24i%2B%2B%29+%7B%7D%0D%0A++%24name_install_log+%3D+%22%24name_install_log.%24i%22%0D%0A%0D%0A++Start-Transcript+-Append+%22%24path_log%5Ccustom-install-%24name_install_log.log%22%0D%0A%7D%0D%0Acatch+%7B%7D%0D%0A%0D%0AWrite-Host+%22%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D-%22+-BackgroundColor+blue%0D%0AWrite-Host+%22++++++++++++++N%C3%A3o+Feche+esta+janela++++++++++++++%22+-BackgroundColor+blue%0D%0AWrite-Host+%22%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D-%22+-BackgroundColor+blue%0D%0A%0D%0Awrite-host+%22...%22%0D%0A%0D%0AStart-Sleep+-Seconds+1%0D%0A%0D%0Aif+%28-Not+%28%24env%3AUSERNAME+-eq+%22%24env%3ACOMPUTERNAME%22%29%29+%7B%0D%0A++if+%28-Not+%28%24is_test%29%29+%7B%0D%0A++++try+%7B%0D%0A++++++taskkill+%2FF+%2FIM+explorer.exe%0D%0A++++++taskkill+%2FF+%2FIM+msedge.exe%0D%0A++++%7D%0D%0A++++catch+%7B+%0D%0A++++++write-host+%22.%22%0D%0A++++++write-host+%22-%3E+falha+ao+encerar+explorer.exe+%2F+msedge.exe%22%0D%0A++++%7D%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0AStart-Sleep+-Seconds+7%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+show_log_title+%7B%0D%0A++param%28%0D%0A++++%5Bstring%5D%24str_menssagem%0D%0A++%29++++%0D%0A%0D%0A++write-host+%22.%22++++%0D%0A++write-host+%22.%22%0D%0A++write-host+%22%24str_menssagem%22%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+sha256%7B%0D%0A++Param+%28%0D%0A++++%5BParameter%28Mandatory%3D%24true%29%5D%0D%0A++++%5Bstring%5D+%24ClearString%0D%0A++%29%0D%0A%0D%0A++%24hasher+%3D+%5BSystem.Security.Cryptography.HashAlgorithm%5D%3A%3ACreate%28%27sha256%27%29%0D%0A++%24hash+%3D+%24hasher.ComputeHash%28%5BSystem.Text.Encoding%5D%3A%3AUTF8.GetBytes%28%24ClearString%29%29%0D%0A%0D%0A++%24hashString+%3D+%5BSystem.BitConverter%5D%3A%3AToString%28%24hash%29%0D%0A++%24hashString.Replace%28%27-%27%2C+%27%27%29++%0D%0A++write-host+%24hashString%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+download_save%28%29%7B%0D%0A++param%28%0D%0A++++%5Bstring%5D%24url%2C%0D%0A++++%5Bstring%5D%24dest%0D%0A++%29++%0D%0A++%0D%0A++if+%28-Not+%28Test-Path+%22%24dest%22%29%29+%7B%0D%0A++++write-host+%22Baixando+URL...%22%0D%0A%0D%0A++++write-host+%22Invoke-WebRequest+%27%24url%27+-OutFile+%27%24dest%27%22%0D%0A%0D%0A++++try%7B%0D%0A++++++Invoke-WebRequest+%22%24url%22+-OutFile+%22%24dest%22%0D%0A++++++write-host+%22%2D%2D-%3E+Pronto.%22%0D%0A%0D%0A++++++if+%28Test-path+%22%24dest%22%29%7B%0D%0A++++++++write-host+%22%2D%2D-%3E+Baixado+e+salvo.%22%0D%0A++++++%7Delse%7B%0D%0A++++++++write-host+%22%3A%3A%3A%3A+Baixado%2C+mas+N%C3%83O+foi+salvo+no+destino.%22%0D%0A++++++%7D%0D%0A++++%7Dcatch%7B%0D%0A++++++write-host+%22Falha+ao+baixar+arquivo%22%0D%0A++++%7D%0D%0A++%7Delse%7B%0D%0A++++write-host+%22Arquivo+j%C3%A1+existente.%22%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+isowin_install_pwsh7+%7B%0D%0A++show_log_title+%22%23%23%23+Instalando+powershell+7%22%0D%0A%0D%0A++%24x+%3D+Get-Command+%22pwsh%22+-errorAction+SilentlyContinue%0D%0A++if+%28-Not+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24x%29%29%29+%7B%0D%0A++++return+%22%22%0D%0A++%7D%0D%0A%0D%0A++try+%7B%0D%0A++++download_save+%22https%3A%2F%2Fgithub.com%2FPowerShell%2FPowerShell%2Freleases%2Fdownload%2Fv7.4.6%2FPowerShell-7.4.6-win-x64.msi%22+%22%24pwsh_msi_path%22++++%0D%0A%0D%0A++++write-host+%22%26+msiexec.exe+%2Fpackage+%27%24pwsh_msi_path%27+%2Fquiet+ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL%3D1+ADD_FILE_CONTEXT_MENU_RUNPOWERSHELL%3D1+ENABLE_PSREMOTING%3D1+REGISTER_MANIFEST%3D1+USE_MU%3D1+ENABLE_MU%3D1+ADD_PATH%3D1+%7C+write-host%22%0D%0A++++%26+msiexec.exe+%2Fpackage+%22%24pwsh_msi_path%22+%2Fquiet+ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL%3D1+ADD_FILE_CONTEXT_MENU_RUNPOWERSHELL%3D1+ENABLE_PSREMOTING%3D1+REGISTER_MANIFEST%3D1+USE_MU%3D1+ENABLE_MU%3D1+ADD_PATH%3D1+%7C+write-host++%0D%0A%0D%0A++++Start-Sleep+-Seconds+1%0D%0A%0D%0A++++%24x1+%3D+Get-Command+%22pwsh%22+-errorAction+SilentlyContinue%0D%0A++++if+%28-Not+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24x1%29%29%29+%7B%0D%0A++++++Remove-Item+%22%24pwsh_msi_path%22+-Force%0D%0A++++%7D%0D%0A++%7D%0D%0A++catch+%7B%0D%0A++++write-show_log_title+%22%3F%3F%3F%3F%3F+FALHA+AO+INSTALAR+POWESHELL+7%22%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+isowin_winget_update+%7B%0D%0A++show_log_title+%22%3E%3E%3E+Atualizando+winget...%22%0D%0A%0D%0A++try+%7B%0D%0A++++%24winget+%3D+%24null%0D%0A++++%24DesktopAppInstaller+%3D+%22C%3A%5CProgram+Files%5CWindowsApps%5CMicrosoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe%22%0D%0A++++%24SystemContext+%3D+Resolve-Path+%22%24DesktopAppInstaller%22%0D%0A++++if+%28%24SystemContext%29+%7B+%24SystemContext+%3D+%24SystemContext%5B-1%5D.Path+%7D%0D%0A++++%24UserContext+%3D+Get-Command+winget.exe+-ErrorAction+SilentlyContinue%0D%0A++++if+%28%24UserContext%29+%7B+%24winget+%3D+%24UserContext.Source+%7D%0D%0A++++elseif+%28Test-Path+%22%24SystemContext%5CAppInstallerCLI.exe%22%29+%7B+%24winget+%3D+%22%24SystemContext%5CAppInstallerCLI.exe%22+%7D%0D%0A++++elseif+%28Test-Path+%22%24SystemContext%5Cwinget.exe%22%29+%7B+%24winget+%3D+%22%24SystemContext%5Cwinget.exe%22+%7D%0D%0A++++else+%7B+return+%24false+%7D%0D%0A++++if+%28%24null+-ne+%24winget%29+%7B+%22winget+content%3A+%24winget%22+%7D%0D%0A++++%23+Logs+%24%28env%3ALOCALAPPDATA%29%5CPackages%5CMicrosoft.DesktopAppInstaller_8wekyb3d8bbwe%5CLocalState%5CDiagOutputDir%0D%0A++%7D%0D%0A++catch+%7B%0D%0A++++write-host+%22%3A%3A%3A+FALHA+ao+setar+winget%22%0D%0A++%7D%0D%0A++%0D%0A%0D%0A++try+%7B%0D%0A++++write-host+%22%26+%27%24winget%27+update+%2D%2Dall+%7C+write-host%22%0D%0A++++%26+%22%24winget%22+update+%2D%2Dall+%7C+write-host%0D%0A%0D%0A++++write-host+%22%2D%2D%2D%2D%2D%2D%3E+winget+atualizado%21%22%0D%0A++%7D%0D%0A++catch+%7B%0D%0A++++%23+Catch+any+error%0D%0A++++show_log_title+%22winget%3A+Falha+ao+atualizar+winget%2C+tentando+com+PWSH+7%22%0D%0A%0D%0A++++switch+%28%24PSVersionTable.PSVersion.Major%29+%7B%0D%0A%0D%0A++++++%23%23+7+and+%28hopefully%29+later+versions%0D%0A++++++%7B+%24_+-ge+7+%7D+%7B%0D%0A++++++++Write-Host+%22%2D%2D-%3E+j%C3%A1+est%C3%A1vamos+no+PSWH+7%22%0D%0A++++++%7D+%23+PowerShell+7%0D%0A%0D%0A++++++%23%23+5%2C+and+only+5.+We+aren%27t+interested+in+previous+versions.%0D%0A++++++5+%7B%0D%0A++++++++isowin_install_pwsh7%0D%0A%0D%0A++++++++try+%7B%0D%0A++++++++++write-host+%22%26+pwsh+-NoProfile+-Command+%27winget+update+%2D%2Dall%27+%7C+write-host%22%0D%0A++++++++++%26+pwsh+-NoProfile+-Command+%22winget+update+%2D%2Dall%22+%7C+write-host%0D%0A%0D%0A++++++++%7D%0D%0A++++++++catch+%7B%0D%0A++++++++++show_log_title+%22%3F%3F%3F%3F%3F+FALHA+ao+atualizar+winget+%27%24name_id%27%22%0D%0A++++++++%7D%0D%0A++++++%7D+%23+PowerShell+5%0D%0A%0D%0A++++++default+%7B%0D%0A++++++++%23%23+If+it%27s+not+7+or+later%2C+and+it%27s+not+5%2C+then+we+aren%27t+doing+it.%0D%0A++++++++write-host+%22%3F%3F%3F+Unsupported+PowerShell+version+%5B1%5D.%22%0D%0A%0D%0A++++++%7D+%23+default%0D%0A%0D%0A++++%7D+%23+switch++++%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+isowin_winget_install+%7B%0D%0A++param%28%0D%0A++++%5Bstring%5D%24name_id%0D%0A++%29%0D%0A%0D%0A++show_log_title+%22%3E%3E%3E+Winget%3A+Instalando+%24name_id%22%0D%0A++write-host+%22-+Configurando+Winget%22%0D%0A%0D%0A++try+%7B%0D%0A++++%24winget+%3D+%24null%0D%0A++++%24DesktopAppInstaller+%3D+%22C%3A%5CProgram+Files%5CWindowsApps%5CMicrosoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe%22%0D%0A++++%24SystemContext+%3D+Resolve-Path+%22%24DesktopAppInstaller%22%0D%0A++++if+%28%24SystemContext%29+%7B+%24SystemContext+%3D+%24SystemContext%5B-1%5D.Path+%7D%0D%0A++++%24UserContext+%3D+Get-Command+winget.exe+-ErrorAction+SilentlyContinue%0D%0A++++if+%28%24UserContext%29+%7B+%24winget+%3D+%24UserContext.Source+%7D%0D%0A++++elseif+%28Test-Path+%22%24SystemContext%5CAppInstallerCLI.exe%22%29+%7B+%24winget+%3D+%22%24SystemContext%5CAppInstallerCLI.exe%22+%7D%0D%0A++++elseif+%28Test-Path+%22%24SystemContext%5Cwinget.exe%22%29+%7B+%24winget+%3D+%22%24SystemContext%5Cwinget.exe%22+%7D%0D%0A++++else+%7B+return+%24false+%7D%0D%0A++++if+%28%24null+-ne+%24winget%29+%7B+%22winget+content%3A+%24winget%22+%7D%0D%0A++++%23+Logs+%24%28env%3ALOCALAPPDATA%29%5CPackages%5CMicrosoft.DesktopAppInstaller_8wekyb3d8bbwe%5CLocalState%5CDiagOutputDir%0D%0A++%7D%0D%0A++catch+%7B%0D%0A++++write-host+%22%3A%3A%3A+FALHA+ao+configurar+winget%22%0D%0A++%7D%0D%0A%0D%0A++%24i+%3D+0%0D%0A++for+%28%3B+Test-Path+%22%24path_log%5Capps%5C%24name_id.winget.%24i.log%22%3B+%24i%2B%2B%29+%7B%7D%0D%0A++%24path_log_full+%3D+%22%24path_log%5Capps%5C%24name_id.winget.%24i.log%22%0D%0A++%22Log%3A+%24path_log_full%22%0D%0A%0D%0A++try+%7B%0D%0A++++write-host+%22%26+%27%24winget%27+install+%2D%2Did+%27%24name_id%27+%2D%2Dverbose+%2D%2Dexact+%2D%2Dsilent+%2D%2Ddisable-interactivity+%2D%2Daccept-package-agreements+%2D%2Daccept-source-agreements+%7C+Out-File+-FilePath+%27%24path_log_full%27%22%0D%0A++++%26+%22%24winget%22+install+%2D%2Did+%22%24name_id%22+%2D%2Dverbose+%2D%2Dexact+%2D%2Dsilent+%2D%2Ddisable-interactivity+%2D%2Daccept-package-agreements+%2D%2Daccept-source-agreements+%7C+Out-File+-FilePath+%22%24path_log_full%22++++%0D%0A%0D%0A++++write-host+%22%2D%2D%2D%2D%2D%2D%3E+%24name_id+instalado.%22%0D%0A++%7D%0D%0A++catch+%7B%0D%0A++++%23+Catch+any+error%0D%0A++++write-host+%22Winget%3A+Falha+ao+instalar+%27%24name_id%27%2C+tentando+com+PWSH+7%22%0D%0A%0D%0A++++switch+%28%24PSVersionTable.PSVersion.Major%29+%7B%0D%0A++++++%23%23+7+and+%28hopefully%29+later+versions%0D%0A++++++%7B+%24_+-ge+7+%7D+%7B%0D%0A++++++++Write-Host+%22%2D%2D-%3E+j%C3%A1+est%C3%A1vamos+no+PSWH+7%22%0D%0A++++++++return+0%0D%0A++++++%7D+%23+PowerShell+7%0D%0A%0D%0A++++++%23%23+5%2C+and+only+5.+We+aren%27t+interested+in+previous+versions.%0D%0A++++++5+%7B%0D%0A++++++++isowin_install_pwsh7%0D%0A%0D%0A++++++++try+%7B++++++++++%0D%0A++++++++++write-host+%22%26+pwsh+-NoProfile+-Command+%27%24winget+install+%2D%2Did+%27%24name_id%27+%2D%2Dverbose+%2D%2Dexact+%2D%2Dsilent+%2D%2Ddisable-interactivity+%2D%2Daccept-package-agreements+%2D%2Daccept-source-agreements%27++%7C+Out-File+-FilePath+%27%24path_log_full%27%22%0D%0A++++++++++%26+pwsh+-NoProfile+-Command+%22%24winget+install+%2D%2Did+%22%24name_id%22+%2D%2Dverbose+%2D%2Dexact+%2D%2Dsilent+%2D%2Ddisable-interactivity+%2D%2Daccept-package-agreements+%2D%2Daccept-source-agreements%22++%7C+Out-File+-FilePath+%22%24path_log_full%22%0D%0A++++++++++write-host+%22%2D%2D%2D%2D%2D%2D%3E+%24name_id+supostamente+instalado.%22%0D%0A%0D%0A++++++++%7D%0D%0A++++++++catch+%7B%0D%0A++++++++++write-host+%22%3F%3F%3F%3F%3F+FALHA+final+ao+instalar+%27%24name_id%27%22%0D%0A++++++++%7D%0D%0A%0D%0A++++++%7D+%23+PowerShell+5%0D%0A%0D%0A++++++default+%7B%0D%0A++++++++%23%23+If+it%27s+not+7+or+later%2C+and+it%27s+not+5%2C+then+we+aren%27t+doing+it.%0D%0A++++++++Write-Host+%22%3F%3F%3F+Unsupported+PowerShell+version+%5B2%5D.%22%0D%0A%0D%0A++++++%7D+%23+default%0D%0A++++%7D+%23+switch++++%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+appinstall_find_path%28%29+%7B++++%0D%0A++try+%7B%0D%0A++++%24Drives+%3D+Get-PSDrive+-PSProvider+%27FileSystem%27%0D%0A%0D%0A++++foreach+%28%24Drive+in+%24drives%29+%7B%0D%0A++++++if+%28Test-Path+-Path+%22%24%7BDrive%7D%3A%5C%24pendrive_add_script%22%29+%7B%0D%0A++++++++return+%22%24%7BDrive%7D%3A%5C%24pendrive_add_script%22%0D%0A++++++%7D%0D%0A++++%7D%0D%0A%0D%0A++++return+%22%22%0D%0A++%7D++%0D%0A++catch+%7B++++%0D%0A++++return+%22%22%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%24appsinstall_folder+%3D+appinstall_find_path%0D%0A%0D%0Afunction+isowin_install_app+%7B%0D%0A++param%28%0D%0A++++%5Bstring%5D%24name_id%0D%0A++%29%0D%0A%0D%0A++show_log_title+%22Instalando+%24name_id%22%0D%0A%0D%0A++if+%28-Not+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24appsinstall_folder%29%29%29+%7B%0D%0A++++Write-Host+%22-+Pasta+offline+exitente%22%0D%0A++++%24nn+%3D+%22%22%0D%0A%0D%0A++++if+%28Test-Path+-Path+%22%24%7Bappsinstall_folder%7D%5C%24%7Bname_id%7D.exe%22%29+%7B%0D%0A++++++%24nn+%3D+%22%24%7Bappsinstall_folder%7D%5C%24%7Bname_id%7D.exe%22%0D%0A++++%7D%0D%0A++++elseif+%28Test-Path+-Path+%22%24%7Bappsinstall_folder%7D%5C%24name_id.msi%22%29+%7B%0D%0A++++++%24nn+%3D+%22%24%7Bappsinstall_folder%7D%5C%24splited.msi%22%0D%0A++++%7D%0D%0A++++%0D%0A++++if+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24nn%29%29+%7B%0D%0A++++++%24splited+%3D+%24name_id.split%28%22.%22%29%5B-1%5D%0D%0A%0D%0A++++++if+%28Test-Path+-Path+%22%24%7Bappsinstall_folder%7D%5C%24splited.exe%22%29+%7B%0D%0A++++++++%24nn+%3D+%22%24%7Bappsinstall_folder%7D%5C%24splited.exe%22%0D%0A++++++%7D%0D%0A++++++elseif+%28Test-Path+-Path+%22%24%7Bappsinstall_folder%7D%5C%24splited.msi%22%29+%7B%0D%0A++++++++%24nn+%3D+%22%24%7Bappsinstall_folder%7D%5C%24splited.msi%22%0D%0A++++++%7D%0D%0A++++%7D%0D%0A++++%0D%0A++++if+%28-Not+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24nn%29%29%29+%7B++++++%0D%0A++++++%24extencao+%3D+%24nn.split%28%22.%22%29%5B-1%5D%0D%0A++++++Write-Host+%22-+Arquivo+offline+%27.%24extencao%27+encontrado%22%0D%0A++++++Write-Host+%22%3D+%27%24nn%27%22%0D%0A++++++Write-Host+%22-+Executando...%22%0D%0A%0D%0A++++++try+%7B%0D%0A++++++++if+%28%22msi%22+-eq+%22%24extencao%22%29+%7B++++++++%0D%0A++++++++++write-host+%22%26+msiexec.exe+%2Fi+%27%24nn%27+%2Fqn+-Wait+%2FL*V+%27%24path_log%5Capps%5C%24name_id.log%27%22%0D%0A++++++++++%26+msiexec.exe+%2Fi+%22%24nn%22+%2Fqn+-Wait+%2FL*V+%22%24path_log%5Capps%5C%24name_id.log%22%0D%0A++++++++%7D%0D%0A++++++++elseif+%28%22exe%22+-eq+%22%24extencao%22%29+%7B%0D%0A++++++++++write-host+%22%24ExecutionContext.InvokeCommand.ExpandString%28%27%24nn+%7C+Out-File+-FilePath+%27%24path_log_full%27%29%22%0D%0A++++++++++%24ExecutionContext.InvokeCommand.ExpandString%28%22%24nn+%7C+Out-File+-FilePath+%27%24path_log_full%27%22%29%0D%0A++++++++%7D++++++++%0D%0A++++++%7D%0D%0A++++++catch+%7B%0D%0A++++++++write-host+%22%3F%3F%3F+Falha+ao+executar+aquivo+de+instala%C3%A7%C3%A3o+offline%2C+tentando+via+winget...+%22%0D%0A++++++++isowin_winget_install+%24name_id%0D%0A++++++%7D%0D%0A%0D%0A++++++return+%22%22%0D%0A++++%7D%0D%0A++%7D%0D%0A++%0D%0A++write-host+%22-+Arquivo+de+instala%C3%A7%C3%A3o+offline+inexistente%2C+tentando+via+winget...%22%0D%0A%0D%0A++isowin_winget_install+%24name_id%0D%0A%7D%0D%0A%0D%0Awrite-host+%22Iniciando...%22%0D%0A%0D%0AStart-Sleep+-Seconds+3%0D%0A%0D%0A%23show_log_title+%22%23%23%23+Fix+winget%2C+for%C3%A7ando+disponibiliza%C3%A7%C3%A3o+de+winget+no+contexto+do+sistema%22%0D%0A%0D%0A%23try+%7B%0D%0A%23++Add-AppxPackage+-RegisterByFamilyName+-MainPackage+Microsoft.DesktopAppInstaller_8wekyb3d8bbwe+%7C+write-host%0D%0A%23%7D%0D%0A%23catch+%7B+%0D%0A%23++write-host+%22%3F%3F%3F%3F%3F+falha+ao+executar+Add-AppxPackage+%22%0D%0A%23%7D%0D%0A%0D%0Ashow_log_title+%22%23%23%23+Winget+setup+fix+1%22%0D%0A%0D%0Atry+%7B%0D%0A++%24ResolveWingetPath+%3D+Resolve-Path+%22C%3A%5CProgram+Files%5CWindowsApps%5CMicrosoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe%22%0D%0A++if+%28%24ResolveWingetPath%29+%7B%0D%0A++++%24WingetPath+%3D+%24ResolveWingetPath%5B-1%5D.Path%0D%0A++%7D%0D%0A%0D%0A++%24config%0D%0A%0D%0A++Write-Host+%22-%3E+%24wingetpath%22%0D%0A++Set-Location+%22%24wingetpath%22%0D%0A%7D%0D%0Acatch+%7B%0D%0A++write-show_log_title+%22%3F%3F%3F%3F%3F+FALHA+ao+executar+FIX+1%22%0D%0A%7D%0D%0A%0D%0Awrite-host+%22Atual%3A+%24pwd%22%0D%0A%0D%0Ashow_log_title+%22%23%23%23+Baixando+imagens%22%0D%0A%0D%0A%24image_folder+%3D+%22C%3A%5CUsers%5CDefault%5CPictures%22%0D%0A%0D%0A%24imagens+%3D+%40%28%0D%0A++%27kutt.it%2FMKEL4E%27%2C++%0D%0A++%27kutt.it%2FwaGYaN%27%2C%0D%0A++%27kutt.it%2FZX7Z7M%27%2C%0D%0A++%27kutt.it%2F7LqtRa%27%2C%0D%0A++%27kutt.it%2FF6c8Vt%27%2C%0D%0A++%27kutt.it%2F2qW2Gc%27%2C%0D%0A++%27kutt.it%2FhND3BV%27%2C%0D%0A++%27kutt.it%2FaD6eLH%27%2C%0D%0A++%27t.ly%2FvW5fp%27%2C%0D%0A++%27t.ly%2FcSo0i%27%2C%0D%0A++%27t.ly%2FUCvTB%27%2C%0D%0A++%27t.ly%2Fmr1Bx%27%2C%0D%0A++%27t.ly%2Fytgxo%27%2C%0D%0A++%27bit.ly%2F4h0BPfS%27%2C%0D%0A++%27urlr.me%2FJMAUzy%27%2C%0D%0A++%27urlr.me%2FZGatXc%27%2C%0D%0A++%27urlr.me%2FNtnRgq%27%2C%0D%0A++%27urlr.me%2FG4WeBq%27%2C%0D%0A++%27urlr.me%2F9fQhcg%27%2C%0D%0A++%27urlr.me%2FekgUmG%27%2C%0D%0A++%27urlr.me%2FEQKxr8%27%2C%0D%0A++%27urlr.me%2FJnq5BA%27%2C%0D%0A++%27urlr.me%2FrXGsMb%27%2C%0D%0A++%27urlr.me%2F68FdX3%27%2C%0D%0A++%27urlr.me%2Fq7Hw6T%27%2C%0D%0A++%27urlr.me%2FCNR8Mq%27%2C%0D%0A++%27urlr.me%2Ftsazqm%27%2C%0D%0A++%27urlr.me%2FjN5SGP%27%2C%0D%0A++%27urlr.me%2FTHY95N%27%2C%0D%0A++%27urlr.me%2Fh379Wc%27%2C%0D%0A++%27urlr.me%2FFM7EhG%27%2C%0D%0A++%27urlr.me%2FFEduUr%27%2C%0D%0A++%27urlr.me%2Fe2WYCU%27%2C%0D%0A++%27urlr.me%2FVyeEaP%27%2C%0D%0A++%27urlr.me%2FW2TvAt%27%2C%0D%0A++%27urlr.me%2FNbufaY%27%2C%0D%0A++%27urlr.me%2FyhtS5H%27%2C%0D%0A++%27urlr.me%2Fnj4k9Q%27%2C%0D%0A++%27urlr.me%2FGXdNQc%27%2C%0D%0A++%27urlr.me%2FJA6BhN%27%2C%0D%0A++%27urlr.me%2FtG749C%27%2C%0D%0A++%27urlr.me%2Fm9xrBC%27%2C%0D%0A++%27urlr.me%2FmTvKQn%27%2C%0D%0A++%27urlr.me%2FVnzMYR%27%2C%0D%0A++%27urlr.me%2FHVPgFY%27%2C%0D%0A++%27urlr.me%2Fem9kjv%27%2C%0D%0A++%27urlr.me%2FMHQVhE%27%2C%0D%0A++%27urlr.me%2Fdb7Pyv%27%2C%0D%0A++%27urlr.me%2FtyEpvV%27%2C%0D%0A++%27urlr.me%2FNbG7fE%27%2C%0D%0A++%27urlr.me%2FhW95dg%27%2C%0D%0A++%27urlr.me%2FVphZAd%27%2C%0D%0A++%27urlr.me%2FJpAQZ5%27%2C%0D%0A++%27urlr.me%2FxM4qDQ%27%2C%0D%0A++%27urlr.me%2FqNBRPk%27%2C%0D%0A++%27urlr.me%2FnPQekc%27%2C%0D%0A++%27urlr.me%2F4cbBnE%27%2C%0D%0A++%27urlr.me%2F8UaRFu%27%2C%0D%0A++%27urlr.me%2FfVBQnr%27%2C%0D%0A++%27urlr.me%2FhPu24n%27%2C%0D%0A++%27urlr.me%2F23j8vE%27%2C%0D%0A++%27urlr.me%2FdpgV5P%27%2C%0D%0A++%27urlr.me%2FfrZzxd%27%2C%0D%0A++%27urlr.me%2FefyTpK%27%2C%0D%0A++%27urlr.me%2FQn4T6z%27%2C%0D%0A++%27urlr.me%2FZsYwdC%27%2C%0D%0A++%27urlr.me%2FNhfdQu%27%2C%0D%0A++%27urlr.me%2F9gDwkE%27%2C%0D%0A++%27urlr.me%2FUasKT5%27%2C%0D%0A++%27urlr.me%2FgZqCdK%27%2C%0D%0A++%27urlr.me%2Feau7Mt%27%2C%0D%0A++%27urlr.me%2F6s3hvN%27%2C%0D%0A++%27urlr.me%2FSBGyFA%27%2C%0D%0A++%27urlr.me%2FjgQdca%27%2C%0D%0A++%27urlr.me%2FHbd9Vc%27%2C%0D%0A++%27urlr.me%2Fjmvw3X%27%2C%0D%0A++%27urlr.me%2Fyjtfv6%27%2C%0D%0A++%27urlr.me%2F4CazJD%27%2C%0D%0A++%27urlr.me%2FJCpGnz%27%2C%0D%0A++%27urlr.me%2FnZWsHa%27%2C%0D%0A++%27urlr.me%2FNfVRGb%27%2C%0D%0A++%27urlr.me%2FpAEUfG%27%2C%0D%0A++%27urlr.me%2F89j5tD%27%2C%0D%0A++%27urlr.me%2FmEtKJh%27%2C%0D%0A++%27urlr.me%2FhqdsB9%27%2C%0D%0A++%27urlr.me%2F5mPf8Q%27%2C%0D%0A++%27urlr.me%2FRfXp34%27%2C%0D%0A++%27urlr.me%2FNYCtpU%27%2C%0D%0A++%27urlr.me%2FH7t6Xb%27%2C%0D%0A++%27urlr.me%2FYAzsFP%27%2C%0D%0A++%27urlr.me%2FuZNKgR%27%2C%0D%0A++%27urlr.me%2FQ5Uv9h%27%2C%0D%0A++%27urlr.me%2FhT9jMx%27%2C%0D%0A++%27urlr.me%2FueaRZy%27%2C%0D%0A++%27urlr.me%2FXGjTcF%27%2C%0D%0A++%27urlr.me%2FAG9yxp%27%2C%0D%0A++%27urlr.me%2FepDqRG%27%2C%0D%0A++%27urlr.me%2FU9MvtD%27%2C%0D%0A++%27urlr.me%2Fz2ZRSy%27%2C%0D%0A++%27urlr.me%2Fp6xSYz%27%2C%0D%0A++%27urlr.me%2FXYRQHq%27%2C%0D%0A++%27urlr.me%2FEdwahm%27%2C%0D%0A++%27urlr.me%2FtqQdJF%27%2C%0D%0A++%27urlr.me%2F3GtQHT%27%2C%0D%0A++%27urlr.me%2F68p9G5%27%2C%0D%0A++%27urlr.me%2FPTvBRY%27%2C%0D%0A++%27urlr.me%2FfV9tKB%27%2C%0D%0A++%27urlr.me%2FvXVN9K%27%2C%0D%0A++%27urlr.me%2FNxtP3T%27%2C%0D%0A++%27urlr.me%2FzGankf%27%0D%0A%29%0D%0A%0D%0Aif+%28-Not+%28%24env%3AUSERNAME+-eq+%22%24env%3ACOMPUTERNAME%22%29%29+%7B%0D%0A++%24image_folder+%3D+%22C%3A%5CUsers%5C%24%7Benv%3AUSERNAME%7D%5CPictures%22%0D%0A%7D%0D%0A%0D%0Aif+%28-Not+%28Test-Path+-Path+%22%24image_folder%5Cwallpappers%5C%22%29%29+%7B++%0D%0A++New-Item+-Path+%22%24image_folder%5Cwallpappers%5C%22+-Force+-ItemType+Directory%0D%0A%7D%0D%0A%0D%0A%24i+%3D+0%3B%0D%0Aforeach+%28%24u+in+%24imagens%29%7B%0D%0A++%24shaname+%3D+sha256+%24u+++++%0D%0A++download_save+%22%24u%22+%22%24image_folder%5Cwallpappers%5C%24shaname.jpg%22++%0D%0A%7D%0D%0A%0D%0Ashow_log_title+%22%23%23%23+Definindo+tela+de+bloqueio+personalizada%22%0D%0A%0D%0A%24regKey+%3D+%27HKLM%3A%5CSOFTWARE%5CPolicies%5CMicrosoft%5CWindows%5CPersonalization%27%0D%0A%23+create+the+key+if+it+doesn%27t+already+exist%0D%0Aif+%28%21%28Test-Path+-Path+%24regKey%29%29+%7B%0D%0A+++%24null+%3D+New-Item+-Path+%24regKey%0D%0A%7D%0D%0A%0D%0A%23+now+set+the+registry+entry%0D%0Atry%7B%0D%0A++Set-ItemProperty+-Path+%24regKey+-Name+%27LockScreenImage%27+-value+%22%24image_folder%5C5F3C1A878379373A9853DC58CC78D414212DFD6063F9E8F48832ED940502902B.jpg%22%0D%0A%7Dcatch%7B%0D%0A++write-host+%22%3F%3F%3F%3F%3F+FALHA+ao+definir+tela+de+bloqueio%22%0D%0A%7D%0D%0A%0D%0Aisowin_winget_update%0D%0A%0D%0Ashow_log_title+%22%23%23%23+Instalando+APPs+basiquissimos...%22%0D%0A%0D%0Aisowin_install_app+%22Oracle.JavaRuntimeEnvironment%22%0D%0Aisowin_install_app+%22Microsoft.DirectX%22%0D%0Aisowin_install_app+%22CodecGuide.K-LiteCodecPack.Mega%22%0D%0Aisowin_install_app+%227zip.7zip%22%0D%0Aisowin_install_app+%22Microsoft.VisualStudioCode%22%0D%0A%0D%0Ashow_log_title+%22Continuar+padr%C3%A3o+ou+seguir+%27apps.lst%27+do+pendrive%3F%22%0D%0A%0D%0A%23+verifica+se+tem+lista+de+apps+no+pendrive%0D%0Aif+%28-Not+%28Test-Path+%22%24appsinstall_folder%5Capps.lst%22%29%29+%7B%0D%0A++Write-Host+%22%2D%2D-%3E+usando+o+padrao...%22++%0D%0A++isowin_install_app+%22VideoLAN.VLC%22++%0D%0A++isowin_install_app+%22Google.Chrome%22%0D%0A++isowin_install_app+%22Brave.Brave%22%0D%0A++isowin_install_app+%22SumatraPDF.SumatraPDF%22%0D%0A++isowin_install_app+%22PDFsam.PDFsam%22%0D%0A++isowin_install_app+%22QL-Win.QuickLook%22%0D%0A++isowin_install_app+%22Piriform.Defraggler%22%0D%0A++isowin_install_app+%22CrystalDewWorld.CrystalDiskInfo%22%0D%0A++isowin_install_app+%22qBittorrent.qBittorrent%22%0D%0A++isowin_install_app+%22TheDocumentFoundation.LibreOffice%22%0D%0A%7D%0D%0Aelse+%7B%0D%0A++Write-Host+%22%2D%2D-%3E+usando+%27apps.lst+do+pendrive%27...%22%0D%0A%0D%0A++foreach+%28%24line+in+Get-Content+%22%24appsinstall_folder%5Capps.lst%22%29+%7B%0D%0A++++isowin_install_app+%24line%0D%0A++%7D++%0D%0A%7D%0D%0A%0D%0Ashow_log_title+%22Executar+script+%27run.ps1%27+no+pendrive%3F%22%0D%0A%0D%0A%23+tenta+executar+o+scrip+localizado+no+pendrive%0D%0Aif+%28Test-Path+%22%24appsinstall_folder%5Crun.ps1%22%29+%7B%0D%0A++Write-Host+%22%2D%2D-%3E+Sim%2C+executando...%22%0D%0A++pwsh.exe+-NoProfile+-Command+%22Get-Content+-LiteralPath+%27%24appsinstall_folder%5Crun.ps1%27+-Raw+%7C+Invoke-Expression%3B%22+%7C+write-host%0D%0A%7D%0D%0Aelse+%7B%0D%0A++Write-Host+%22%2D%2D-%3E+N%C3%A3o%2C+n%C3%A3o+localizado.%22%0D%0A%7D%0D%0A%0D%0Ashow_log_title+%22%23%23%23+Desabilitando+Hiberna%C3%A7%C3%A3o.%22%0D%0A%0D%0Atry%7B%0D%0A++powercfg.exe+%2Fhibernate+off%0D%0A%7Dcatch%7B%0D%0A++write-host+%22%2D%2D-%3E+Falha+ao+desabilitar+hiberna%C3%A7%C3%A3o.%22%0D%0A%7D%0D%0A%0D%0Awrite-host+%22CONCLUIDO%22%0D%0A%0D%0AWrite-Host+%22%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D-%22+-BackgroundColor+blue%0D%0AWrite-Host+%22+++++++++++++++++++REINICIANDO+++++++++++++++++++%22+-BackgroundColor+blue%0D%0AWrite-Host+%22%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D-%22+-BackgroundColor+blue%0D%0A%0D%0Atry+%7B%0D%0A++Stop-Transcript%0D%0A%7D%0D%0Acatch+%7B%7D%0D%0A%0D%0Aif+%28-Not+%28%24env%3AUSERNAME+-eq+%22%24env%3ACOMPUTERNAME%22%29%29+%7B%0D%0A++if+%28-Not+%28%24is_test%29%29+%7B%0D%0A++++Restart-Computer%0D%0A++%7D%0D%0A%7D&SystemScriptType3=Ps1&FirstLogonScript0=Param%28%0D%0A++%5Bstring%5D%24is_test++++%0D%0A%29%0D%0A%0D%0A%24path_log+%3D+%22c%3A%5Cappinstall.log%22%0D%0A%24pwsh_msi_path+%3D+%22c%3A%5Cpwsh_install.msi%22%0D%0A%24pendrive_add_script+%3D+%22boot%5Cappinstall%5Cwindows%22%0D%0A%24image_folder+%3D+%22C%3A%5CUsers%5CDefault%5CPictures%22%0D%0A%0D%0Atry+%7B%0D%0A++Set-ExecutionPolicy+-ExecutionPolicy+Bypass+-Force%0D%0A%7D%0D%0Acatch+%7B+%0D%0A++write-host+%22%3F%3F%3F%3F%3F+falha+ao+setar+pol%C3%ADtica+de+execu%C3%A7ao.%22%0D%0A%7D%0D%0A%0D%0Aif+%28-Not+%28Test-Path+-Path+%22%24path_log%5C%22%29%29+%7B%0D%0A++New-Item+-Path+%22%24path_log%22+-Force+-ItemType+Directory++%0D%0A%7D%0D%0A%0D%0Aif+%28-Not+%28Test-Path+-Path+%22%24path_log%5Capps%22%29%29+%7B++%0D%0A++New-Item+-Path+%22%24path_log%5Capps%5C%22+-Force+-ItemType+Directory%0D%0A%7D%0D%0A%0D%0Atry+%7B%0D%0A++%24name_install_log+%3D+%24env%3AUSERNAME%0D%0A++%0D%0A++if+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24name_install_log%29%29+%7B++%0D%0A++++%24name_install_log+%3D+%28%5BSystem.Security.Principal.WindowsIdentity%5D%3A%3AGetCurrent%28%29.Name%29.Replace%28%22%5C%22%2C+%22-%22%29%0D%0A++%7D%0D%0A%0D%0A++%24i+%3D+0%0D%0A++for+%28%3B+Test-Path+%22%24path_log%5Cauto-install-%24name_install_log.%24i.log%22%3B+%24i%2B%2B%29+%7B%7D%0D%0A++%24name_install_log+%3D+%22%24name_install_log.%24i%22%0D%0A%0D%0A++Start-Transcript+-Append+%22%24path_log%5Ccustom-install-%24name_install_log.log%22%0D%0A%7D%0D%0Acatch+%7B%7D%0D%0A%0D%0AWrite-Host+%22%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D-%22+-BackgroundColor+blue%0D%0AWrite-Host+%22++++++++++++++N%C3%A3o+Feche+esta+janela++++++++++++++%22+-BackgroundColor+blue%0D%0AWrite-Host+%22%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D-%22+-BackgroundColor+blue%0D%0A%0D%0Awrite-host+%22...%22%0D%0A%0D%0AStart-Sleep+-Seconds+1%0D%0A%0D%0Aif+%28-Not+%28%24env%3AUSERNAME+-eq+%22%24env%3ACOMPUTERNAME%22%29%29+%7B%0D%0A++if+%28-Not+%28%24is_test%29%29+%7B%0D%0A++++try+%7B%0D%0A++++++taskkill+%2FF+%2FIM+explorer.exe%0D%0A++++++taskkill+%2FF+%2FIM+msedge.exe%0D%0A++++%7D%0D%0A++++catch+%7B+%0D%0A++++++write-host+%22.%22%0D%0A++++++write-host+%22-%3E+falha+ao+encerar+explorer.exe+%2F+msedge.exe%22%0D%0A++++%7D%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0AStart-Sleep+-Seconds+7%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+show_log_title+%7B%0D%0A++param%28%0D%0A++++%5Bstring%5D%24str_menssagem%0D%0A++%29++++%0D%0A%0D%0A++write-host+%22.%22++++%0D%0A++write-host+%22.%22%0D%0A++write-host+%22%24str_menssagem%22%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+sha256%7B%0D%0A++Param+%28%0D%0A++++%5BParameter%28Mandatory%3D%24true%29%5D%0D%0A++++%5Bstring%5D+%24ClearString%0D%0A++%29%0D%0A%0D%0A++%24hasher+%3D+%5BSystem.Security.Cryptography.HashAlgorithm%5D%3A%3ACreate%28%27sha256%27%29%0D%0A++%24hash+%3D+%24hasher.ComputeHash%28%5BSystem.Text.Encoding%5D%3A%3AUTF8.GetBytes%28%24ClearString%29%29%0D%0A%0D%0A++%24hashString+%3D+%5BSystem.BitConverter%5D%3A%3AToString%28%24hash%29%0D%0A++%24hashString.Replace%28%27-%27%2C+%27%27%29++%0D%0A++write-host+%24hashString%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+download_save%28%29%7B%0D%0A++param%28%0D%0A++++%5Bstring%5D%24url%2C%0D%0A++++%5Bstring%5D%24dest%0D%0A++%29++%0D%0A++%0D%0A++if+%28-Not+%28Test-Path+%22%24dest%22%29%29+%7B%0D%0A++++write-host+%22Baixando+URL...%22%0D%0A%0D%0A++++write-host+%22Invoke-WebRequest+%27%24url%27+-OutFile+%27%24dest%27%22%0D%0A%0D%0A++++try%7B%0D%0A++++++Invoke-WebRequest+%22%24url%22+-OutFile+%22%24dest%22%0D%0A++++++write-host+%22%2D%2D-%3E+Pronto.%22%0D%0A%0D%0A++++++if+%28Test-path+%22%24dest%22%29%7B%0D%0A++++++++write-host+%22%2D%2D-%3E+Baixado+e+salvo.%22%0D%0A++++++%7Delse%7B%0D%0A++++++++write-host+%22%3A%3A%3A%3A+Baixado%2C+mas+N%C3%83O+foi+salvo+no+destino.%22%0D%0A++++++%7D%0D%0A++++%7Dcatch%7B%0D%0A++++++write-host+%22Falha+ao+baixar+arquivo%22%0D%0A++++%7D%0D%0A++%7Delse%7B%0D%0A++++write-host+%22Arquivo+j%C3%A1+existente.%22%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+isowin_install_pwsh7+%7B%0D%0A++show_log_title+%22%23%23%23+Instalando+powershell+7%22%0D%0A%0D%0A++%24x+%3D+Get-Command+%22pwsh%22+-errorAction+SilentlyContinue%0D%0A++if+%28-Not+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24x%29%29%29+%7B%0D%0A++++return+%22%22%0D%0A++%7D%0D%0A%0D%0A++try+%7B%0D%0A++++download_save+%22https%3A%2F%2Fgithub.com%2FPowerShell%2FPowerShell%2Freleases%2Fdownload%2Fv7.4.6%2FPowerShell-7.4.6-win-x64.msi%22+%22%24pwsh_msi_path%22++++%0D%0A%0D%0A++++write-host+%22%26+msiexec.exe+%2Fpackage+%27%24pwsh_msi_path%27+%2Fquiet+ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL%3D1+ADD_FILE_CONTEXT_MENU_RUNPOWERSHELL%3D1+ENABLE_PSREMOTING%3D1+REGISTER_MANIFEST%3D1+USE_MU%3D1+ENABLE_MU%3D1+ADD_PATH%3D1+%7C+write-host%22%0D%0A++++%26+msiexec.exe+%2Fpackage+%22%24pwsh_msi_path%22+%2Fquiet+ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL%3D1+ADD_FILE_CONTEXT_MENU_RUNPOWERSHELL%3D1+ENABLE_PSREMOTING%3D1+REGISTER_MANIFEST%3D1+USE_MU%3D1+ENABLE_MU%3D1+ADD_PATH%3D1+%7C+write-host++%0D%0A%0D%0A++++Start-Sleep+-Seconds+1%0D%0A%0D%0A++++%24x1+%3D+Get-Command+%22pwsh%22+-errorAction+SilentlyContinue%0D%0A++++if+%28-Not+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24x1%29%29%29+%7B%0D%0A++++++Remove-Item+%22%24pwsh_msi_path%22+-Force%0D%0A++++%7D%0D%0A++%7D%0D%0A++catch+%7B%0D%0A++++write-show_log_title+%22%3F%3F%3F%3F%3F+FALHA+AO+INSTALAR+POWESHELL+7%22%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+isowin_winget_update+%7B%0D%0A++show_log_title+%22%3E%3E%3E+Atualizando+winget...%22%0D%0A%0D%0A++try+%7B%0D%0A++++%24winget+%3D+%24null%0D%0A++++%24DesktopAppInstaller+%3D+%22C%3A%5CProgram+Files%5CWindowsApps%5CMicrosoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe%22%0D%0A++++%24SystemContext+%3D+Resolve-Path+%22%24DesktopAppInstaller%22%0D%0A++++if+%28%24SystemContext%29+%7B+%24SystemContext+%3D+%24SystemContext%5B-1%5D.Path+%7D%0D%0A++++%24UserContext+%3D+Get-Command+winget.exe+-ErrorAction+SilentlyContinue%0D%0A++++if+%28%24UserContext%29+%7B+%24winget+%3D+%24UserContext.Source+%7D%0D%0A++++elseif+%28Test-Path+%22%24SystemContext%5CAppInstallerCLI.exe%22%29+%7B+%24winget+%3D+%22%24SystemContext%5CAppInstallerCLI.exe%22+%7D%0D%0A++++elseif+%28Test-Path+%22%24SystemContext%5Cwinget.exe%22%29+%7B+%24winget+%3D+%22%24SystemContext%5Cwinget.exe%22+%7D%0D%0A++++else+%7B+return+%24false+%7D%0D%0A++++if+%28%24null+-ne+%24winget%29+%7B+%22winget+content%3A+%24winget%22+%7D%0D%0A++++%23+Logs+%24%28env%3ALOCALAPPDATA%29%5CPackages%5CMicrosoft.DesktopAppInstaller_8wekyb3d8bbwe%5CLocalState%5CDiagOutputDir%0D%0A++%7D%0D%0A++catch+%7B%0D%0A++++write-host+%22%3A%3A%3A+FALHA+ao+setar+winget%22%0D%0A++%7D%0D%0A++%0D%0A%0D%0A++try+%7B%0D%0A++++write-host+%22%26+%27%24winget%27+update+%2D%2Dall+%7C+write-host%22%0D%0A++++%26+%22%24winget%22+update+%2D%2Dall+%7C+write-host%0D%0A%0D%0A++++write-host+%22%2D%2D%2D%2D%2D%2D%3E+winget+atualizado%21%22%0D%0A++%7D%0D%0A++catch+%7B%0D%0A++++%23+Catch+any+error%0D%0A++++show_log_title+%22winget%3A+Falha+ao+atualizar+winget%2C+tentando+com+PWSH+7%22%0D%0A%0D%0A++++switch+%28%24PSVersionTable.PSVersion.Major%29+%7B%0D%0A%0D%0A++++++%23%23+7+and+%28hopefully%29+later+versions%0D%0A++++++%7B+%24_+-ge+7+%7D+%7B%0D%0A++++++++Write-Host+%22%2D%2D-%3E+j%C3%A1+est%C3%A1vamos+no+PSWH+7%22%0D%0A++++++%7D+%23+PowerShell+7%0D%0A%0D%0A++++++%23%23+5%2C+and+only+5.+We+aren%27t+interested+in+previous+versions.%0D%0A++++++5+%7B%0D%0A++++++++isowin_install_pwsh7%0D%0A%0D%0A++++++++try+%7B%0D%0A++++++++++write-host+%22%26+pwsh+-NoProfile+-Command+%27winget+update+%2D%2Dall%27+%7C+write-host%22%0D%0A++++++++++%26+pwsh+-NoProfile+-Command+%22winget+update+%2D%2Dall%22+%7C+write-host%0D%0A%0D%0A++++++++%7D%0D%0A++++++++catch+%7B%0D%0A++++++++++show_log_title+%22%3F%3F%3F%3F%3F+FALHA+ao+atualizar+winget+%27%24name_id%27%22%0D%0A++++++++%7D%0D%0A++++++%7D+%23+PowerShell+5%0D%0A%0D%0A++++++default+%7B%0D%0A++++++++%23%23+If+it%27s+not+7+or+later%2C+and+it%27s+not+5%2C+then+we+aren%27t+doing+it.%0D%0A++++++++write-host+%22%3F%3F%3F+Unsupported+PowerShell+version+%5B1%5D.%22%0D%0A%0D%0A++++++%7D+%23+default%0D%0A%0D%0A++++%7D+%23+switch++++%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+isowin_winget_install+%7B%0D%0A++param%28%0D%0A++++%5Bstring%5D%24name_id%0D%0A++%29%0D%0A%0D%0A++show_log_title+%22%3E%3E%3E+Winget%3A+Instalando+%24name_id%22%0D%0A++write-host+%22-+Configurando+Winget%22%0D%0A%0D%0A++try+%7B%0D%0A++++%24winget+%3D+%24null%0D%0A++++%24DesktopAppInstaller+%3D+%22C%3A%5CProgram+Files%5CWindowsApps%5CMicrosoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe%22%0D%0A++++%24SystemContext+%3D+Resolve-Path+%22%24DesktopAppInstaller%22%0D%0A++++if+%28%24SystemContext%29+%7B+%24SystemContext+%3D+%24SystemContext%5B-1%5D.Path+%7D%0D%0A++++%24UserContext+%3D+Get-Command+winget.exe+-ErrorAction+SilentlyContinue%0D%0A++++if+%28%24UserContext%29+%7B+%24winget+%3D+%24UserContext.Source+%7D%0D%0A++++elseif+%28Test-Path+%22%24SystemContext%5CAppInstallerCLI.exe%22%29+%7B+%24winget+%3D+%22%24SystemContext%5CAppInstallerCLI.exe%22+%7D%0D%0A++++elseif+%28Test-Path+%22%24SystemContext%5Cwinget.exe%22%29+%7B+%24winget+%3D+%22%24SystemContext%5Cwinget.exe%22+%7D%0D%0A++++else+%7B+return+%24false+%7D%0D%0A++++if+%28%24null+-ne+%24winget%29+%7B+%22winget+content%3A+%24winget%22+%7D%0D%0A++++%23+Logs+%24%28env%3ALOCALAPPDATA%29%5CPackages%5CMicrosoft.DesktopAppInstaller_8wekyb3d8bbwe%5CLocalState%5CDiagOutputDir%0D%0A++%7D%0D%0A++catch+%7B%0D%0A++++write-host+%22%3A%3A%3A+FALHA+ao+configurar+winget%22%0D%0A++%7D%0D%0A%0D%0A++%24i+%3D+0%0D%0A++for+%28%3B+Test-Path+%22%24path_log%5Capps%5C%24name_id.winget.%24i.log%22%3B+%24i%2B%2B%29+%7B%7D%0D%0A++%24path_log_full+%3D+%22%24path_log%5Capps%5C%24name_id.winget.%24i.log%22%0D%0A++%22Log%3A+%24path_log_full%22%0D%0A%0D%0A++try+%7B%0D%0A++++write-host+%22%26+%27%24winget%27+install+%2D%2Did+%27%24name_id%27+%2D%2Dverbose+%2D%2Dexact+%2D%2Dsilent+%2D%2Ddisable-interactivity+%2D%2Daccept-package-agreements+%2D%2Daccept-source-agreements+%7C+Out-File+-FilePath+%27%24path_log_full%27%22%0D%0A++++%26+%22%24winget%22+install+%2D%2Did+%22%24name_id%22+%2D%2Dverbose+%2D%2Dexact+%2D%2Dsilent+%2D%2Ddisable-interactivity+%2D%2Daccept-package-agreements+%2D%2Daccept-source-agreements+%7C+Out-File+-FilePath+%22%24path_log_full%22++++%0D%0A%0D%0A++++write-host+%22%2D%2D%2D%2D%2D%2D%3E+%24name_id+instalado.%22%0D%0A++%7D%0D%0A++catch+%7B%0D%0A++++%23+Catch+any+error%0D%0A++++write-host+%22Winget%3A+Falha+ao+instalar+%27%24name_id%27%2C+tentando+com+PWSH+7%22%0D%0A%0D%0A++++switch+%28%24PSVersionTable.PSVersion.Major%29+%7B%0D%0A++++++%23%23+7+and+%28hopefully%29+later+versions%0D%0A++++++%7B+%24_+-ge+7+%7D+%7B%0D%0A++++++++Write-Host+%22%2D%2D-%3E+j%C3%A1+est%C3%A1vamos+no+PSWH+7%22%0D%0A++++++++return+0%0D%0A++++++%7D+%23+PowerShell+7%0D%0A%0D%0A++++++%23%23+5%2C+and+only+5.+We+aren%27t+interested+in+previous+versions.%0D%0A++++++5+%7B%0D%0A++++++++isowin_install_pwsh7%0D%0A%0D%0A++++++++try+%7B++++++++++%0D%0A++++++++++write-host+%22%26+pwsh+-NoProfile+-Command+%27%24winget+install+%2D%2Did+%27%24name_id%27+%2D%2Dverbose+%2D%2Dexact+%2D%2Dsilent+%2D%2Ddisable-interactivity+%2D%2Daccept-package-agreements+%2D%2Daccept-source-agreements%27++%7C+Out-File+-FilePath+%27%24path_log_full%27%22%0D%0A++++++++++%26+pwsh+-NoProfile+-Command+%22%24winget+install+%2D%2Did+%22%24name_id%22+%2D%2Dverbose+%2D%2Dexact+%2D%2Dsilent+%2D%2Ddisable-interactivity+%2D%2Daccept-package-agreements+%2D%2Daccept-source-agreements%22++%7C+Out-File+-FilePath+%22%24path_log_full%22%0D%0A++++++++++write-host+%22%2D%2D%2D%2D%2D%2D%3E+%24name_id+supostamente+instalado.%22%0D%0A%0D%0A++++++++%7D%0D%0A++++++++catch+%7B%0D%0A++++++++++write-host+%22%3F%3F%3F%3F%3F+FALHA+final+ao+instalar+%27%24name_id%27%22%0D%0A++++++++%7D%0D%0A%0D%0A++++++%7D+%23+PowerShell+5%0D%0A%0D%0A++++++default+%7B%0D%0A++++++++%23%23+If+it%27s+not+7+or+later%2C+and+it%27s+not+5%2C+then+we+aren%27t+doing+it.%0D%0A++++++++Write-Host+%22%3F%3F%3F+Unsupported+PowerShell+version+%5B2%5D.%22%0D%0A%0D%0A++++++%7D+%23+default%0D%0A++++%7D+%23+switch++++%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0Afunction+appinstall_find_path%28%29+%7B++++%0D%0A++try+%7B%0D%0A++++%24Drives+%3D+Get-PSDrive+-PSProvider+%27FileSystem%27%0D%0A%0D%0A++++foreach+%28%24Drive+in+%24drives%29+%7B%0D%0A++++++if+%28Test-Path+-Path+%22%24%7BDrive%7D%3A%5C%24pendrive_add_script%22%29+%7B%0D%0A++++++++return+%22%24%7BDrive%7D%3A%5C%24pendrive_add_script%22%0D%0A++++++%7D%0D%0A++++%7D%0D%0A%0D%0A++++return+%22%22%0D%0A++%7D++%0D%0A++catch+%7B++++%0D%0A++++return+%22%22%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%23%23%23%23%0D%0A%24appsinstall_folder+%3D+appinstall_find_path%0D%0A%0D%0Afunction+isowin_install_app+%7B%0D%0A++param%28%0D%0A++++%5Bstring%5D%24name_id%0D%0A++%29%0D%0A%0D%0A++show_log_title+%22Instalando+%24name_id%22%0D%0A%0D%0A++if+%28-Not+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24appsinstall_folder%29%29%29+%7B%0D%0A++++Write-Host+%22-+Pasta+offline+exitente%22%0D%0A++++%24nn+%3D+%22%22%0D%0A%0D%0A++++if+%28Test-Path+-Path+%22%24%7Bappsinstall_folder%7D%5C%24%7Bname_id%7D.exe%22%29+%7B%0D%0A++++++%24nn+%3D+%22%24%7Bappsinstall_folder%7D%5C%24%7Bname_id%7D.exe%22%0D%0A++++%7D%0D%0A++++elseif+%28Test-Path+-Path+%22%24%7Bappsinstall_folder%7D%5C%24name_id.msi%22%29+%7B%0D%0A++++++%24nn+%3D+%22%24%7Bappsinstall_folder%7D%5C%24splited.msi%22%0D%0A++++%7D%0D%0A++++%0D%0A++++if+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24nn%29%29+%7B%0D%0A++++++%24splited+%3D+%24name_id.split%28%22.%22%29%5B-1%5D%0D%0A%0D%0A++++++if+%28Test-Path+-Path+%22%24%7Bappsinstall_folder%7D%5C%24splited.exe%22%29+%7B%0D%0A++++++++%24nn+%3D+%22%24%7Bappsinstall_folder%7D%5C%24splited.exe%22%0D%0A++++++%7D%0D%0A++++++elseif+%28Test-Path+-Path+%22%24%7Bappsinstall_folder%7D%5C%24splited.msi%22%29+%7B%0D%0A++++++++%24nn+%3D+%22%24%7Bappsinstall_folder%7D%5C%24splited.msi%22%0D%0A++++++%7D%0D%0A++++%7D%0D%0A++++%0D%0A++++if+%28-Not+%28%5Bstring%5D%3A%3AIsNullOrEmpty%28%24nn%29%29%29+%7B++++++%0D%0A++++++%24extencao+%3D+%24nn.split%28%22.%22%29%5B-1%5D%0D%0A++++++Write-Host+%22-+Arquivo+offline+%27.%24extencao%27+encontrado%22%0D%0A++++++Write-Host+%22%3D+%27%24nn%27%22%0D%0A++++++Write-Host+%22-+Executando...%22%0D%0A%0D%0A++++++try+%7B%0D%0A++++++++if+%28%22msi%22+-eq+%22%24extencao%22%29+%7B++++++++%0D%0A++++++++++write-host+%22%26+msiexec.exe+%2Fi+%27%24nn%27+%2Fqn+-Wait+%2FL*V+%27%24path_log%5Capps%5C%24name_id.log%27%22%0D%0A++++++++++%26+msiexec.exe+%2Fi+%22%24nn%22+%2Fqn+-Wait+%2FL*V+%22%24path_log%5Capps%5C%24name_id.log%22%0D%0A++++++++%7D%0D%0A++++++++elseif+%28%22exe%22+-eq+%22%24extencao%22%29+%7B%0D%0A++++++++++write-host+%22%24ExecutionContext.InvokeCommand.ExpandString%28%27%24nn+%7C+Out-File+-FilePath+%27%24path_log_full%27%29%22%0D%0A++++++++++%24ExecutionContext.InvokeCommand.ExpandString%28%22%24nn+%7C+Out-File+-FilePath+%27%24path_log_full%27%22%29%0D%0A++++++++%7D++++++++%0D%0A++++++%7D%0D%0A++++++catch+%7B%0D%0A++++++++write-host+%22%3F%3F%3F+Falha+ao+executar+aquivo+de+instala%C3%A7%C3%A3o+offline%2C+tentando+via+winget...+%22%0D%0A++++++++isowin_winget_install+%24name_id%0D%0A++++++%7D%0D%0A%0D%0A++++++return+%22%22%0D%0A++++%7D%0D%0A++%7D%0D%0A++%0D%0A++write-host+%22-+Arquivo+de+instala%C3%A7%C3%A3o+offline+inexistente%2C+tentando+via+winget...%22%0D%0A%0D%0A++isowin_winget_install+%24name_id%0D%0A%7D%0D%0A%0D%0Awrite-host+%22Iniciando...%22%0D%0A%0D%0AStart-Sleep+-Seconds+3%0D%0A%0D%0A%23show_log_title+%22%23%23%23+Fix+winget%2C+for%C3%A7ando+disponibiliza%C3%A7%C3%A3o+de+winget+no+contexto+do+sistema%22%0D%0A%0D%0A%23try+%7B%0D%0A%23++Add-AppxPackage+-RegisterByFamilyName+-MainPackage+Microsoft.DesktopAppInstaller_8wekyb3d8bbwe+%7C+write-host%0D%0A%23%7D%0D%0A%23catch+%7B+%0D%0A%23++write-host+%22%3F%3F%3F%3F%3F+falha+ao+executar+Add-AppxPackage+%22%0D%0A%23%7D%0D%0A%0D%0Ashow_log_title+%22%23%23%23+Winget+setup+fix+1%22%0D%0A%0D%0Atry+%7B%0D%0A++%24ResolveWingetPath+%3D+Resolve-Path+%22C%3A%5CProgram+Files%5CWindowsApps%5CMicrosoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe%22%0D%0A++if+%28%24ResolveWingetPath%29+%7B%0D%0A++++%24WingetPath+%3D+%24ResolveWingetPath%5B-1%5D.Path%0D%0A++%7D%0D%0A%0D%0A++%24config%0D%0A%0D%0A++Write-Host+%22-%3E+%24wingetpath%22%0D%0A++Set-Location+%22%24wingetpath%22%0D%0A%7D%0D%0Acatch+%7B%0D%0A++write-show_log_title+%22%3F%3F%3F%3F%3F+FALHA+ao+executar+FIX+1%22%0D%0A%7D%0D%0A%0D%0Awrite-host+%22Atual%3A+%24pwd%22%0D%0A%0D%0Ashow_log_title+%22%23%23%23+Baixando+imagens%22%0D%0A%0D%0A%24image_folder+%3D+%22C%3A%5CUsers%5CDefault%5CPictures%22%0D%0A%0D%0A%24imagens+%3D+%40%28%0D%0A++%27kutt.it%2FMKEL4E%27%2C++%0D%0A++%27kutt.it%2FwaGYaN%27%2C%0D%0A++%27kutt.it%2FZX7Z7M%27%2C%0D%0A++%27kutt.it%2F7LqtRa%27%2C%0D%0A++%27kutt.it%2FF6c8Vt%27%2C%0D%0A++%27kutt.it%2F2qW2Gc%27%2C%0D%0A++%27kutt.it%2FhND3BV%27%2C%0D%0A++%27kutt.it%2FaD6eLH%27%2C%0D%0A++%27t.ly%2FvW5fp%27%2C%0D%0A++%27t.ly%2FcSo0i%27%2C%0D%0A++%27t.ly%2FUCvTB%27%2C%0D%0A++%27t.ly%2Fmr1Bx%27%2C%0D%0A++%27t.ly%2Fytgxo%27%2C%0D%0A++%27bit.ly%2F4h0BPfS%27%2C%0D%0A++%27urlr.me%2FJMAUzy%27%2C%0D%0A++%27urlr.me%2FZGatXc%27%2C%0D%0A++%27urlr.me%2FNtnRgq%27%2C%0D%0A++%27urlr.me%2FG4WeBq%27%2C%0D%0A++%27urlr.me%2F9fQhcg%27%2C%0D%0A++%27urlr.me%2FekgUmG%27%2C%0D%0A++%27urlr.me%2FEQKxr8%27%2C%0D%0A++%27urlr.me%2FJnq5BA%27%2C%0D%0A++%27urlr.me%2FrXGsMb%27%2C%0D%0A++%27urlr.me%2F68FdX3%27%2C%0D%0A++%27urlr.me%2Fq7Hw6T%27%2C%0D%0A++%27urlr.me%2FCNR8Mq%27%2C%0D%0A++%27urlr.me%2Ftsazqm%27%2C%0D%0A++%27urlr.me%2FjN5SGP%27%2C%0D%0A++%27urlr.me%2FTHY95N%27%2C%0D%0A++%27urlr.me%2Fh379Wc%27%2C%0D%0A++%27urlr.me%2FFM7EhG%27%2C%0D%0A++%27urlr.me%2FFEduUr%27%2C%0D%0A++%27urlr.me%2Fe2WYCU%27%2C%0D%0A++%27urlr.me%2FVyeEaP%27%2C%0D%0A++%27urlr.me%2FW2TvAt%27%2C%0D%0A++%27urlr.me%2FNbufaY%27%2C%0D%0A++%27urlr.me%2FyhtS5H%27%2C%0D%0A++%27urlr.me%2Fnj4k9Q%27%2C%0D%0A++%27urlr.me%2FGXdNQc%27%2C%0D%0A++%27urlr.me%2FJA6BhN%27%2C%0D%0A++%27urlr.me%2FtG749C%27%2C%0D%0A++%27urlr.me%2Fm9xrBC%27%2C%0D%0A++%27urlr.me%2FmTvKQn%27%2C%0D%0A++%27urlr.me%2FVnzMYR%27%2C%0D%0A++%27urlr.me%2FHVPgFY%27%2C%0D%0A++%27urlr.me%2Fem9kjv%27%2C%0D%0A++%27urlr.me%2FMHQVhE%27%2C%0D%0A++%27urlr.me%2Fdb7Pyv%27%2C%0D%0A++%27urlr.me%2FtyEpvV%27%2C%0D%0A++%27urlr.me%2FNbG7fE%27%2C%0D%0A++%27urlr.me%2FhW95dg%27%2C%0D%0A++%27urlr.me%2FVphZAd%27%2C%0D%0A++%27urlr.me%2FJpAQZ5%27%2C%0D%0A++%27urlr.me%2FxM4qDQ%27%2C%0D%0A++%27urlr.me%2FqNBRPk%27%2C%0D%0A++%27urlr.me%2FnPQekc%27%2C%0D%0A++%27urlr.me%2F4cbBnE%27%2C%0D%0A++%27urlr.me%2F8UaRFu%27%2C%0D%0A++%27urlr.me%2FfVBQnr%27%2C%0D%0A++%27urlr.me%2FhPu24n%27%2C%0D%0A++%27urlr.me%2F23j8vE%27%2C%0D%0A++%27urlr.me%2FdpgV5P%27%2C%0D%0A++%27urlr.me%2FfrZzxd%27%2C%0D%0A++%27urlr.me%2FefyTpK%27%2C%0D%0A++%27urlr.me%2FQn4T6z%27%2C%0D%0A++%27urlr.me%2FZsYwdC%27%2C%0D%0A++%27urlr.me%2FNhfdQu%27%2C%0D%0A++%27urlr.me%2F9gDwkE%27%2C%0D%0A++%27urlr.me%2FUasKT5%27%2C%0D%0A++%27urlr.me%2FgZqCdK%27%2C%0D%0A++%27urlr.me%2Feau7Mt%27%2C%0D%0A++%27urlr.me%2F6s3hvN%27%2C%0D%0A++%27urlr.me%2FSBGyFA%27%2C%0D%0A++%27urlr.me%2FjgQdca%27%2C%0D%0A++%27urlr.me%2FHbd9Vc%27%2C%0D%0A++%27urlr.me%2Fjmvw3X%27%2C%0D%0A++%27urlr.me%2Fyjtfv6%27%2C%0D%0A++%27urlr.me%2F4CazJD%27%2C%0D%0A++%27urlr.me%2FJCpGnz%27%2C%0D%0A++%27urlr.me%2FnZWsHa%27%2C%0D%0A++%27urlr.me%2FNfVRGb%27%2C%0D%0A++%27urlr.me%2FpAEUfG%27%2C%0D%0A++%27urlr.me%2F89j5tD%27%2C%0D%0A++%27urlr.me%2FmEtKJh%27%2C%0D%0A++%27urlr.me%2FhqdsB9%27%2C%0D%0A++%27urlr.me%2F5mPf8Q%27%2C%0D%0A++%27urlr.me%2FRfXp34%27%2C%0D%0A++%27urlr.me%2FNYCtpU%27%2C%0D%0A++%27urlr.me%2FH7t6Xb%27%2C%0D%0A++%27urlr.me%2FYAzsFP%27%2C%0D%0A++%27urlr.me%2FuZNKgR%27%2C%0D%0A++%27urlr.me%2FQ5Uv9h%27%2C%0D%0A++%27urlr.me%2FhT9jMx%27%2C%0D%0A++%27urlr.me%2FueaRZy%27%2C%0D%0A++%27urlr.me%2FXGjTcF%27%2C%0D%0A++%27urlr.me%2FAG9yxp%27%2C%0D%0A++%27urlr.me%2FepDqRG%27%2C%0D%0A++%27urlr.me%2FU9MvtD%27%2C%0D%0A++%27urlr.me%2Fz2ZRSy%27%2C%0D%0A++%27urlr.me%2Fp6xSYz%27%2C%0D%0A++%27urlr.me%2FXYRQHq%27%2C%0D%0A++%27urlr.me%2FEdwahm%27%2C%0D%0A++%27urlr.me%2FtqQdJF%27%2C%0D%0A++%27urlr.me%2F3GtQHT%27%2C%0D%0A++%27urlr.me%2F68p9G5%27%2C%0D%0A++%27urlr.me%2FPTvBRY%27%2C%0D%0A++%27urlr.me%2FfV9tKB%27%2C%0D%0A++%27urlr.me%2FvXVN9K%27%2C%0D%0A++%27urlr.me%2FNxtP3T%27%2C%0D%0A++%27urlr.me%2FzGankf%27%0D%0A%29%0D%0A%0D%0Aif+%28-Not+%28%24env%3AUSERNAME+-eq+%22%24env%3ACOMPUTERNAME%22%29%29+%7B%0D%0A++%24image_folder+%3D+%22C%3A%5CUsers%5C%24%7Benv%3AUSERNAME%7D%5CPictures%22%0D%0A%7D%0D%0A%0D%0Aif+%28-Not+%28Test-Path+-Path+%22%24image_folder%5Cwallpappers%5C%22%29%29+%7B++%0D%0A++New-Item+-Path+%22%24image_folder%5Cwallpappers%5C%22+-Force+-ItemType+Directory%0D%0A%7D%0D%0A%0D%0A%24i+%3D+0%3B%0D%0Aforeach+%28%24u+in+%24imagens%29%7B%0D%0A++%24shaname+%3D+sha256+%24u+++++%0D%0A++download_save+%22%24u%22+%22%24image_folder%5Cwallpappers%5C%24shaname.jpg%22++%0D%0A%7D%0D%0A%0D%0Ashow_log_title+%22%23%23%23+Definindo+tela+de+bloqueio+personalizada%22%0D%0A%0D%0A%24regKey+%3D+%27HKLM%3A%5CSOFTWARE%5CPolicies%5CMicrosoft%5CWindows%5CPersonalization%27%0D%0A%23+create+the+key+if+it+doesn%27t+already+exist%0D%0Aif+%28%21%28Test-Path+-Path+%24regKey%29%29+%7B%0D%0A+++%24null+%3D+New-Item+-Path+%24regKey%0D%0A%7D%0D%0A%0D%0A%23+now+set+the+registry+entry%0D%0Atry%7B%0D%0A++Set-ItemProperty+-Path+%24regKey+-Name+%27LockScreenImage%27+-value+%22%24image_folder%5C5F3C1A878379373A9853DC58CC78D414212DFD6063F9E8F48832ED940502902B.jpg%22%0D%0A%7Dcatch%7B%0D%0A++write-host+%22%3F%3F%3F%3F%3F+FALHA+ao+definir+tela+de+bloqueio%22%0D%0A%7D%0D%0A%0D%0Aisowin_winget_update%0D%0A%0D%0Ashow_log_title+%22%23%23%23+Instalando+APPs+basiquissimos...%22%0D%0A%0D%0Aisowin_install_app+%22Oracle.JavaRuntimeEnvironment%22%0D%0Aisowin_install_app+%22Microsoft.DirectX%22%0D%0Aisowin_install_app+%22CodecGuide.K-LiteCodecPack.Mega%22%0D%0Aisowin_install_app+%227zip.7zip%22%0D%0Aisowin_install_app+%22Microsoft.VisualStudioCode%22%0D%0A%0D%0Ashow_log_title+%22Continuar+padr%C3%A3o+ou+seguir+%27apps.lst%27+do+pendrive%3F%22%0D%0A%0D%0A%23+verifica+se+tem+lista+de+apps+no+pendrive%0D%0Aif+%28-Not+%28Test-Path+%22%24appsinstall_folder%5Capps.lst%22%29%29+%7B%0D%0A++Write-Host+%22%2D%2D-%3E+usando+o+padrao...%22++%0D%0A++isowin_install_app+%22VideoLAN.VLC%22++%0D%0A++isowin_install_app+%22Google.Chrome%22%0D%0A++isowin_install_app+%22Brave.Brave%22%0D%0A++isowin_install_app+%22SumatraPDF.SumatraPDF%22%0D%0A++isowin_install_app+%22PDFsam.PDFsam%22%0D%0A++isowin_install_app+%22QL-Win.QuickLook%22%0D%0A++isowin_install_app+%22Piriform.Defraggler%22%0D%0A++isowin_install_app+%22CrystalDewWorld.CrystalDiskInfo%22%0D%0A++isowin_install_app+%22qBittorrent.qBittorrent%22%0D%0A++isowin_install_app+%22TheDocumentFoundation.LibreOffice%22%0D%0A%7D%0D%0Aelse+%7B%0D%0A++Write-Host+%22%2D%2D-%3E+usando+%27apps.lst+do+pendrive%27...%22%0D%0A%0D%0A++foreach+%28%24line+in+Get-Content+%22%24appsinstall_folder%5Capps.lst%22%29+%7B%0D%0A++++isowin_install_app+%24line%0D%0A++%7D++%0D%0A%7D%0D%0A%0D%0Ashow_log_title+%22Executar+script+%27run.ps1%27+no+pendrive%3F%22%0D%0A%0D%0A%23+tenta+executar+o+scrip+localizado+no+pendrive%0D%0Aif+%28Test-Path+%22%24appsinstall_folder%5Crun.ps1%22%29+%7B%0D%0A++Write-Host+%22%2D%2D-%3E+Sim%2C+executando...%22%0D%0A++pwsh.exe+-NoProfile+-Command+%22Get-Content+-LiteralPath+%27%24appsinstall_folder%5Crun.ps1%27+-Raw+%7C+Invoke-Expression%3B%22+%7C+write-host%0D%0A%7D%0D%0Aelse+%7B%0D%0A++Write-Host+%22%2D%2D-%3E+N%C3%A3o%2C+n%C3%A3o+localizado.%22%0D%0A%7D%0D%0A%0D%0Ashow_log_title+%22%23%23%23+Desabilitando+Hiberna%C3%A7%C3%A3o.%22%0D%0A%0D%0Atry%7B%0D%0A++powercfg.exe+%2Fhibernate+off%0D%0A%7Dcatch%7B%0D%0A++write-host+%22%2D%2D-%3E+Falha+ao+desabilitar+hiberna%C3%A7%C3%A3o.%22%0D%0A%7D%0D%0A%0D%0Awrite-host+%22CONCLUIDO%22%0D%0A%0D%0AWrite-Host+%22%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D-%22+-BackgroundColor+blue%0D%0AWrite-Host+%22+++++++++++++++++++REINICIANDO+++++++++++++++++++%22+-BackgroundColor+blue%0D%0AWrite-Host+%22%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D%2D-%22+-BackgroundColor+blue%0D%0A%0D%0Atry+%7B%0D%0A++Stop-Transcript%0D%0A%7D%0D%0Acatch+%7B%7D%0D%0A%0D%0Aif+%28-Not+%28%24env%3AUSERNAME+-eq+%22%24env%3ACOMPUTERNAME%22%29%29+%7B%0D%0A++if+%28-Not+%28%24is_test%29%29+%7B%0D%0A++++Restart-Computer%0D%0A++%7D%0D%0A%7D&FirstLogonScriptType0=Ps1&UserOnceScript0=REG+ADD+%22HKEY_CURRENT_USER%5CControl+Panel%5CDesktop%5CWindowMetrics%22+%2Fv+MinAnimate+%2Ft+REG_SZ+%2Fd+0+%2Ff&UserOnceScriptType0=Cmd&UserOnceScript1=Windows+Registry+Editor+Version+5.00%0D%0A%0D%0A%0D%0A%3BApply+the+following+registry+values+to+disable+the+settings%0D%0A%0D%0A%0D%0A%3BThis+is+a+must+-+set+appearance+options+to+%22custom%22%0D%0A%5BHKEY_CURRENT_USER%5CSoftware%5CMicrosoft%5CWindows%5CCurrentVersion%5CExplorer%5CVisualEffects%5D%0D%0A%22VisualFXSetting%22%3Ddword%3A2%0D%0A%0D%0A%0D%0A%3BThis+disables+the+following+8+settings%3A%0D%0A%3BAnimate+controls+and+elements+inside+windows%0D%0A%3BFade+or+slide+menus+into+view%0D%0A%3BFade+or+slide+ToolTips+into+view%0D%0A%3BFade+out+menu+items+after+clicking%0D%0A%3BShow+shadows+under+mouse+pointer%0D%0A%3BShow+shadows+under+windows%0D%0A%3BSlide+open+combo+boxes%0D%0A%3BSmooth-scroll+list+boxes%0D%0A%5BHKEY_CURRENT_USER%5CControl+Panel%5CDesktop%5D%0D%0A%22UserPreferencesMask%22%3Dhex%282%29%3A90%2C12%2C03%2C80%2C10%2C00%2C00%2C00%0D%0A%0D%0A%0D%0A%3BAnimate+windows+when+minimizing+and+maximizing%0D%0A%5BHKEY_CURRENT_USER%5CControl+Panel%5CDesktop%5CWindowMetrics%5D%0D%0A%22MinAnimate%22%3D%220%22%0D%0A%0D%0A%0D%0A%3BAnimations+in+the+taskbar%0D%0A%5BHKEY_CURRENT_USER%5CSoftware%5CMicrosoft%5CWindows%5CCurrentVersion%5CExplorer%5CAdvanced%5D%0D%0A%22TaskbarAnimations%22%3Ddword%3A0%0D%0A%0D%0A%0D%0A%3BEnable+Peek%0D%0A%5BHKEY_CURRENT_USER%5CSoftware%5CMicrosoft%5CWindows%5CDWM%5D%0D%0A%22EnableAeroPeek%22%3Ddword%3A0%0D%0A%0D%0A%0D%0A%3BSave+taskbar+thumbnail+previews%0D%0A%5BHKEY_CURRENT_USER%5CSoftware%5CMicrosoft%5CWindows%5CDWM%5D%0D%0A%22AlwaysHibernateThumbnails%22%3Ddword%3A0%0D%0A%0D%0A%0D%0A%3BShow+thumbnails+instead+of+icons%0D%0A%5BHKEY_CURRENT_USER%5CSoftware%5CMicrosoft%5CWindows%5CCurrentVersion%5CExplorer%5CAdvanced%5D%0D%0A%22IconsOnly%22%3Ddword%3A1%0D%0A%0D%0A%0D%0A%3BShow+translucent+selection+rectangle%0D%0A%5BHKEY_CURRENT_USER%5CSoftware%5CMicrosoft%5CWindows%5CCurrentVersion%5CExplorer%5CAdvanced%5D%0D%0A%22ListviewAlphaSelect%22%3Ddword%3A0%0D%0A%0D%0A%0D%0A%3BShow+window+contents+while+dragging%0D%0A%5BHKEY_CURRENT_USER%5CControl+Panel%5CDesktop%5D%0D%0A%22DragFullWindows%22%3D%220%22%0D%0A%0D%0A%0D%0A%3BSmooth+edges+of+screen+fonts%0D%0A%5BHKEY_CURRENT_USER%5CControl+Panel%5CDesktop%5D%0D%0A%22FontSmoothing%22%3D%220%22%0D%0A%0D%0A%0D%0A%3BUse+drop+shadows+for+icon+labels+on+the+desktop%0D%0A%5BHKEY_CURRENT_USER%5CSoftware%5CMicrosoft%5CWindows%5CCurrentVersion%5CExplorer%5CAdvanced%5D%0D%0A%22ListviewShadow%22%3Ddword%3A0%0D%0A%0D%0A%3B+end&UserOnceScriptType1=Reg&WdacMode=Skip-->
	<settings pass="offlineServicing"></settings>
	<settings pass="windowsPE">
		<component name="Microsoft-Windows-International-Core-WinPE" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<SetupUILanguage>
				<UILanguage>pt-BR</UILanguage>
			</SetupUILanguage>
			<InputLocale>0416:00010416</InputLocale>
			<SystemLocale>pt-BR</SystemLocale>
			<UILanguage>pt-BR</UILanguage>
			<UserLocale>pt-BR</UserLocale>
		</component>
		<component name="Microsoft-Windows-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<UserData>
				<ProductKey>
					<Key>VK7JG-NPHTM-C97JM-9MPGT-3V66T</Key>
				</ProductKey>
				<AcceptEula>true</AcceptEula>
			</UserData>
			<UseConfigurationSet>false</UseConfigurationSet>
			<RunSynchronous>
				<RunSynchronousCommand wcm:action="add">
					<Order>1</Order>
					<Path>reg.exe add "HKLM\SYSTEM\Setup\LabConfig" /v BypassTPMCheck /t REG_DWORD /d 1 /f</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>2</Order>
					<Path>reg.exe add "HKLM\SYSTEM\Setup\LabConfig" /v BypassSecureBootCheck /t REG_DWORD /d 1 /f</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>3</Order>
					<Path>reg.exe add "HKLM\SYSTEM\Setup\LabConfig" /v BypassRAMCheck /t REG_DWORD /d 1 /f</Path>
				</RunSynchronousCommand>
			</RunSynchronous>
		</component>
	</settings>
	<settings pass="generalize"></settings>
	<settings pass="specialize">
		<component name="Microsoft-Windows-Deployment" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<RunSynchronous>
				<RunSynchronousCommand wcm:action="add">
					<Order>1</Order>
					<Path>powershell.exe -NoProfile -Command "$xml = [xml]::new(); $xml.Load('C:\Windows\Panther\unattend.xml'); $sb = [scriptblock]::Create( $xml.unattend.Extensions.ExtractScript ); Invoke-Command -ScriptBlock $sb -ArgumentList $xml;"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>2</Order>
					<Path>powershell.exe -NoProfile -Command "Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\Specialize.ps1' -Raw | Invoke-Expression;"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>3</Order>
					<Path>reg.exe load "HKU\DefaultUser" "C:\Users\Default\NTUSER.DAT"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>4</Order>
					<Path>powershell.exe -NoProfile -Command "Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\DefaultUser.ps1' -Raw | Invoke-Expression;"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>5</Order>
					<Path>reg.exe unload "HKU\DefaultUser"</Path>
				</RunSynchronousCommand>
			</RunSynchronous>
		</component>
		<component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<TimeZone>E. South America Standard Time</TimeZone>
		</component>
	</settings>
	<settings pass="auditSystem"></settings>
	<settings pass="auditUser"></settings>
	<settings pass="oobeSystem">
		<component name="Microsoft-Windows-International-Core" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<InputLocale>0416:00010416</InputLocale>
			<SystemLocale>pt-BR</SystemLocale>
			<UILanguage>pt-BR</UILanguage>
			<UserLocale>pt-BR</UserLocale>
		</component>
		<component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<UserAccounts>
				<LocalAccounts>
					<LocalAccount wcm:action="add">
						<Name>admin</Name>
						<Group>Administrators</Group>
						<Password>
							<Value>MQAyADMANAA1ADYANwA4AFAAYQBzAHMAdwBvAHIAZAA=</Value>
							<PlainText>false</PlainText>
						</Password>
					</LocalAccount>
				</LocalAccounts>
			</UserAccounts>
			<AutoLogon>
				<Username>admin</Username>
				<Enabled>true</Enabled>
				<LogonCount>1</LogonCount>
				<Password>
					<Value>MQAyADMANAA1ADYANwA4AFAAYQBzAHMAdwBvAHIAZAA=</Value>
					<PlainText>false</PlainText>
				</Password>
			</AutoLogon>
			<OOBE>
				<ProtectYourPC>3</ProtectYourPC>
				<HideEULAPage>true</HideEULAPage>
				<HideWirelessSetupInOOBE>true</HideWirelessSetupInOOBE>
				<HideOnlineAccountScreens>false</HideOnlineAccountScreens>
			</OOBE>
			<FirstLogonCommands>
				<SynchronousCommand wcm:action="add">
					<Order>1</Order>
					<CommandLine>powershell.exe -NoProfile -Command "Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\FirstLogon.ps1' -Raw | Invoke-Expression;"</CommandLine>
				</SynchronousCommand>
			</FirstLogonCommands>
		</component>
	</settings>
	<Extensions xmlns="https://schneegans.de/windows/unattend-generator/">
		<ExtractScript>
param(
    [xml] $Document
);

foreach( $file in $Document.unattend.Extensions.File ) {
    $path = [System.Environment]::ExpandEnvironmentVariables(
        $file.GetAttribute( 'path' )
    );
    mkdir -Path( $path | Split-Path -Parent ) -ErrorAction 'SilentlyContinue';
    $content = $file.InnerText.Trim();
    if( $file.GetAttribute( 'transformation' ) -ieq 'Base64' ) {
        [System.IO.File]::WriteAllBytes( $path, [System.Convert]::FromBase64String( $content ) );
    } else {
        $encoding = switch( [System.IO.Path]::GetExtension( $path ) ) {
            { $_ -in '.ps1', '.xml' } { [System.Text.Encoding]::UTF8; }
            { $_ -in '.reg', '.vbs', '.js' } { [System.Text.UnicodeEncoding]::new( $false, $true ); }
            default { [System.Text.Encoding]::Default; }
        };
        [System.IO.File]::WriteAllBytes( $path, ( $encoding.GetPreamble() + $encoding.GetBytes( $content ) ) );
    }
}
		</ExtractScript>
		<File path="C:\Windows\Setup\Scripts\RemovePackages.ps1" transformation="Text">
$selectors = @(
	'Microsoft.BingSearch';
	'Microsoft.WindowsCamera';
	'Clipchamp.Clipchamp';
	'Microsoft.WindowsAlarms';
	'Microsoft.549981C3F5F10';
	'Microsoft.Windows.DevHome';
	'MicrosoftCorporationII.MicrosoftFamily';
	'Microsoft.WindowsFeedbackHub';
	'Microsoft.GetHelp';
	'Microsoft.Getstarted';
	'microsoft.windowscommunicationsapps';
	'Microsoft.WindowsMaps';
	'Microsoft.MixedReality.Portal';
	'Microsoft.BingNews';
	'Microsoft.MicrosoftOfficeHub';
	'Microsoft.Office.OneNote';
	'Microsoft.OutlookForWindows';
	'Microsoft.MSPaint';
	'Microsoft.People';
	'Microsoft.PowerAutomateDesktop';
	'MicrosoftCorporationII.QuickAssist';
	'Microsoft.SkypeApp';
	'Microsoft.ScreenSketch';
	'Microsoft.MicrosoftSolitaireCollection';
	'MicrosoftTeams';
	'MSTeams';
	'Microsoft.Todos';
	'Microsoft.WindowsSoundRecorder';
	'Microsoft.Wallet';
	'Microsoft.BingWeather';
	'Microsoft.Xbox.TCUI';
	'Microsoft.XboxApp';
	'Microsoft.XboxGameOverlay';
	'Microsoft.XboxGamingOverlay';
	'Microsoft.XboxIdentityProvider';
	'Microsoft.XboxSpeechToTextOverlay';
	'Microsoft.GamingApp';
	'Microsoft.YourPhone';
	'Microsoft.ZuneMusic';
	'Microsoft.ZuneVideo';
);
$getCommand = {
  Get-AppxProvisionedPackage -Online;
};
$filterCommand = {
  $_.DisplayName -eq $selector;
};
$removeCommand = {
  [CmdletBinding()]
  param(
    [Parameter( Mandatory, ValueFromPipeline )]
    $InputObject
  );
  process {
    $InputObject | Remove-AppxProvisionedPackage -AllUsers -Online -ErrorAction 'Continue';
  }
};
$type = 'Package';
$logfile = 'C:\Windows\Setup\Scripts\RemovePackages.log';
&amp; {
	$installed = &amp; $getCommand;
	foreach( $selector in $selectors ) {
		$result = [ordered] @{
			Selector = $selector;
		};
		$found = $installed | Where-Object -FilterScript $filterCommand;
		if( $found ) {
			$result.Output = $found | &amp; $removeCommand;
			if( $? ) {
				$result.Message = "$type removed.";
			} else {
				$result.Message = "$type not removed.";
				$result.Error = $Error[0];
			}
		} else {
			$result.Message = "$type not installed.";
		}
		$result | ConvertTo-Json -Depth 3 -Compress;
	}
} *&gt;&amp;1 &gt;&gt; $logfile;
		</File>
		<File path="C:\Windows\Setup\Scripts\RemoveCapabilities.ps1" transformation="Text">
$selectors = @(
	'Print.Fax.Scan';
	'Language.Handwriting';
	'Browser.InternetExplorer';
	'MathRecognizer';
	'OneCoreUAP.OneSync';
	'OpenSSH.Client';
	'App.Support.QuickAssist';
	'Microsoft.Windows.SnippingTool';
	'Language.Speech';
	'Language.TextToSpeech';
	'App.StepsRecorder';
	'Hello.Face.18967';
	'Hello.Face.Migration.18967';
	'Hello.Face.20134';
	'Media.WindowsMediaPlayer';
	'Microsoft.Windows.WordPad';
);
$getCommand = {
  Get-WindowsCapability -Online | Where-Object -Property 'State' -NotIn -Value @(
    'NotPresent';
    'Removed';
  );
};
$filterCommand = {
  ($_.Name -split '~')[0] -eq $selector;
};
$removeCommand = {
  [CmdletBinding()]
  param(
    [Parameter( Mandatory, ValueFromPipeline )]
    $InputObject
  );
  process {
    $InputObject | Remove-WindowsCapability -Online -ErrorAction 'Continue';
  }
};
$type = 'Capability';
$logfile = 'C:\Windows\Setup\Scripts\RemoveCapabilities.log';
&amp; {
	$installed = &amp; $getCommand;
	foreach( $selector in $selectors ) {
		$result = [ordered] @{
			Selector = $selector;
		};
		$found = $installed | Where-Object -FilterScript $filterCommand;
		if( $found ) {
			$result.Output = $found | &amp; $removeCommand;
			if( $? ) {
				$result.Message = "$type removed.";
			} else {
				$result.Message = "$type not removed.";
				$result.Error = $Error[0];
			}
		} else {
			$result.Message = "$type not installed.";
		}
		$result | ConvertTo-Json -Depth 3 -Compress;
	}
} *&gt;&amp;1 &gt;&gt; $logfile;
		</File>
		<File path="C:\Windows\Setup\Scripts\RemoveFeatures.ps1" transformation="Text">
$selectors = @(
	'MediaPlayback';
	'MicrosoftWindowsPowerShellV2Root';
	'Microsoft-RemoteDesktopConnection';
	'Recall';
	'Microsoft-SnippingTool';
);
$getCommand = {
  Get-WindowsOptionalFeature -Online | Where-Object -Property 'State' -NotIn -Value @(
    'Disabled';
    'DisabledWithPayloadRemoved';
  );
};
$filterCommand = {
  $_.FeatureName -eq $selector;
};
$removeCommand = {
  [CmdletBinding()]
  param(
    [Parameter( Mandatory, ValueFromPipeline )]
    $InputObject
  );
  process {
    $InputObject | Disable-WindowsOptionalFeature -Online -Remove -NoRestart -ErrorAction 'Continue';
  }
};
$type = 'Feature';
$logfile = 'C:\Windows\Setup\Scripts\RemoveFeatures.log';
&amp; {
	$installed = &amp; $getCommand;
	foreach( $selector in $selectors ) {
		$result = [ordered] @{
			Selector = $selector;
		};
		$found = $installed | Where-Object -FilterScript $filterCommand;
		if( $found ) {
			$result.Output = $found | &amp; $removeCommand;
			if( $? ) {
				$result.Message = "$type removed.";
			} else {
				$result.Message = "$type not removed.";
				$result.Error = $Error[0];
			}
		} else {
			$result.Message = "$type not installed.";
		}
		$result | ConvertTo-Json -Depth 3 -Compress;
	}
} *&gt;&amp;1 &gt;&gt; $logfile;
		</File>
		<File path="C:\Windows\Setup\Scripts\TaskbarLayoutModification.xml" transformation="Text">
&lt;LayoutModificationTemplate xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification" xmlns:defaultlayout="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" xmlns:start="http://schemas.microsoft.com/Start/2014/StartLayout" xmlns:taskbar="http://schemas.microsoft.com/Start/2014/TaskbarLayout" Version="1"&gt;
	&lt;CustomTaskbarLayoutCollection PinListPlacement="Replace"&gt;
		&lt;defaultlayout:TaskbarLayout&gt;
			&lt;taskbar:TaskbarPinList&gt;
				&lt;taskbar:DesktopApp DesktopApplicationLinkPath="#leaveempty" /&gt;
			&lt;/taskbar:TaskbarPinList&gt;
		&lt;/defaultlayout:TaskbarLayout&gt;
	&lt;/CustomTaskbarLayoutCollection&gt;
&lt;/LayoutModificationTemplate&gt;
		</File>
		<File path="C:\Windows\Setup\Scripts\UnlockStartLayout.vbs" transformation="Text">
HKU = &amp;H80000003
Set reg = GetObject("winmgmts://./root/default:StdRegProv")
Set fso = CreateObject("Scripting.FileSystemObject")

If reg.EnumKey(HKU, "", sids) = 0 Then
	If Not IsNull(sids) Then
		For Each sid In sids
			key = sid + "\Software\Policies\Microsoft\Windows\Explorer"
			name = "LockedStartLayout"
			If reg.GetDWORDValue(HKU, key, name, existing) = 0 Then
				reg.SetDWORDValue HKU, key, name, 0
			End If
		Next
	End If
End If
		</File>
		<File path="C:\Windows\Setup\Scripts\UnlockStartLayout.xml" transformation="Text">
&lt;Task version="1.2" xmlns="http://schemas.microsoft.com/windows/2004/02/mit/task"&gt;
	&lt;Triggers&gt;
		&lt;EventTrigger&gt;
			&lt;Enabled&gt;true&lt;/Enabled&gt;
			&lt;Subscription&gt;&amp;lt;QueryList&amp;gt;&amp;lt;Query Id="0" Path="Application"&amp;gt;&amp;lt;Select Path="Application"&amp;gt;*[System[Provider[@Name='UnattendGenerator'] and EventID=1]]&amp;lt;/Select&amp;gt;&amp;lt;/Query&amp;gt;&amp;lt;/QueryList&amp;gt;&lt;/Subscription&gt;
		&lt;/EventTrigger&gt;
	&lt;/Triggers&gt;
	&lt;Principals&gt;
		&lt;Principal id="Author"&gt;
			&lt;UserId&gt;S-1-5-18&lt;/UserId&gt;
			&lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;
		&lt;/Principal&gt;
	&lt;/Principals&gt;
	&lt;Settings&gt;
		&lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;
		&lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;
		&lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;
		&lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;
		&lt;StartWhenAvailable&gt;false&lt;/StartWhenAvailable&gt;
		&lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;
		&lt;IdleSettings&gt;
			&lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;
			&lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;
		&lt;/IdleSettings&gt;
		&lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;
		&lt;Enabled&gt;true&lt;/Enabled&gt;
		&lt;Hidden&gt;false&lt;/Hidden&gt;
		&lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;
		&lt;WakeToRun&gt;false&lt;/WakeToRun&gt;
		&lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;
		&lt;Priority&gt;7&lt;/Priority&gt;
	&lt;/Settings&gt;
	&lt;Actions Context="Author"&gt;
		&lt;Exec&gt;
			&lt;Command&gt;C:\Windows\System32\wscript.exe&lt;/Command&gt;
			&lt;Arguments&gt;C:\Windows\Setup\Scripts\UnlockStartLayout.vbs&lt;/Arguments&gt;
		&lt;/Exec&gt;
	&lt;/Actions&gt;
&lt;/Task&gt;
		</File>
		<File path="C:\Windows\Setup\Scripts\MoveActiveHours.vbs" transformation="Text">
HKLM = &amp;H80000002
key = "SOFTWARE\Microsoft\WindowsUpdate\UX\Settings"
Set reg = GetObject("winmgmts://./root/default:StdRegProv")
current = Hour(Now)
reg.SetDWORDValue HKLM, key, "ActiveHoursStart", ( current + 23 ) Mod 24
reg.SetDWORDValue HKLM, key, "ActiveHoursEnd", ( current + 11 ) Mod 24
reg.SetDWORDValue HKLM, key, "SmartActiveHoursState", 2
		</File>
		<File path="C:\Windows\Setup\Scripts\MoveActiveHours.xml" transformation="Text">
&lt;Task version="1.2" xmlns="http://schemas.microsoft.com/windows/2004/02/mit/task"&gt;
	&lt;Triggers&gt;
		&lt;BootTrigger&gt;
			&lt;Repetition&gt;
				&lt;Interval&gt;PT4H&lt;/Interval&gt;
				&lt;StopAtDurationEnd&gt;false&lt;/StopAtDurationEnd&gt;
			&lt;/Repetition&gt;
			&lt;Enabled&gt;true&lt;/Enabled&gt;
		&lt;/BootTrigger&gt;
		&lt;RegistrationTrigger&gt;
			&lt;Repetition&gt;
				&lt;Interval&gt;PT4H&lt;/Interval&gt;
				&lt;StopAtDurationEnd&gt;false&lt;/StopAtDurationEnd&gt;
			&lt;/Repetition&gt;
			&lt;Enabled&gt;true&lt;/Enabled&gt;
		&lt;/RegistrationTrigger&gt;
	&lt;/Triggers&gt;
	&lt;Principals&gt;
		&lt;Principal id="Author"&gt;
			&lt;UserId&gt;S-1-5-19&lt;/UserId&gt;
			&lt;RunLevel&gt;LeastPrivilege&lt;/RunLevel&gt;
		&lt;/Principal&gt;
	&lt;/Principals&gt;
	&lt;Settings&gt;
		&lt;MultipleInstancesPolicy&gt;IgnoreNew&lt;/MultipleInstancesPolicy&gt;
		&lt;DisallowStartIfOnBatteries&gt;true&lt;/DisallowStartIfOnBatteries&gt;
		&lt;StopIfGoingOnBatteries&gt;true&lt;/StopIfGoingOnBatteries&gt;
		&lt;AllowHardTerminate&gt;true&lt;/AllowHardTerminate&gt;
		&lt;StartWhenAvailable&gt;false&lt;/StartWhenAvailable&gt;
		&lt;RunOnlyIfNetworkAvailable&gt;false&lt;/RunOnlyIfNetworkAvailable&gt;
		&lt;IdleSettings&gt;
			&lt;StopOnIdleEnd&gt;true&lt;/StopOnIdleEnd&gt;
			&lt;RestartOnIdle&gt;false&lt;/RestartOnIdle&gt;
		&lt;/IdleSettings&gt;
		&lt;AllowStartOnDemand&gt;true&lt;/AllowStartOnDemand&gt;
		&lt;Enabled&gt;true&lt;/Enabled&gt;
		&lt;Hidden&gt;false&lt;/Hidden&gt;
		&lt;RunOnlyIfIdle&gt;false&lt;/RunOnlyIfIdle&gt;
		&lt;WakeToRun&gt;false&lt;/WakeToRun&gt;
		&lt;ExecutionTimeLimit&gt;PT72H&lt;/ExecutionTimeLimit&gt;
		&lt;Priority&gt;7&lt;/Priority&gt;
	&lt;/Settings&gt;
	&lt;Actions Context="Author"&gt;
		&lt;Exec&gt;
			&lt;Command&gt;C:\Windows\System32\wscript.exe&lt;/Command&gt;
			&lt;Arguments&gt;C:\Windows\Setup\Scripts\MoveActiveHours.vbs&lt;/Arguments&gt;
		&lt;/Exec&gt;
	&lt;/Actions&gt;
&lt;/Task&gt;
		</File>
		<File path="C:\Windows\Setup\Scripts\TurnOffSystemSounds.ps1" transformation="Text">
$excludes = Get-ChildItem -LiteralPath 'Registry::HKU\DefaultUser\AppEvents\EventLabels' |
    Where-Object -FilterScript { ($_ | Get-ItemProperty).ExcludeFromCPL -eq 1; } |
    Select-Object -ExpandProperty 'PSChildName';
Get-ChildItem -Path 'Registry::HKU\DefaultUser\AppEvents\Schemes\Apps\*\*' |
    Where-Object -Property 'PSChildName' -NotIn $excludes |
    Get-ChildItem -Include '.Current' | Set-ItemProperty -Name '(Default)' -Value '';
		</File>
		<File path="C:\Windows\Setup\Scripts\VBoxGuestAdditions.ps1" transformation="Text">
&amp; {
	foreach( $letter in 'DEFGHIJKLMNOPQRSTUVWXYZ'.ToCharArray() ) {
		$exe = "${letter}:\VBoxWindowsAdditions.exe";
		if( Test-Path -LiteralPath $exe ) {
			$certs = "${letter}:\cert";
			Start-Process -FilePath "${certs}\VBoxCertUtil.exe" -ArgumentList "add-trusted-publisher ${certs}\vbox*.cer", "--root ${certs}\vbox*.cer"  -Wait;
			Start-Process -FilePath $exe -ArgumentList '/with_wddm', '/S' -Wait;
			return;
		}
	}
	'VBoxGuestAdditions.iso is not attached to this VM.';
} *&gt;&amp;1 &gt;&gt; 'C:\Windows\Setup\Scripts\VBoxGuestAdditions.log';
		</File>
		<File path="C:\Windows\Setup\Scripts\MakeEdgeUninstallable.ps1" transformation="Text">
$ErrorActionPreference = 'Stop';
&amp; {
	try {
		$params = @{
			LiteralPath = 'C:\Windows\System32\IntegratedServicesRegionPolicySet.json';
			Encoding = 'Utf8';
		};
		$o = Get-Content @params | ConvertFrom-Json;
		$o.policies | ForEach-Object -Process {
			if( $_.guid -eq '{1bca278a-5d11-4acf-ad2f-f9ab6d7f93a6}' ) {
				$_.defaultState = 'enabled';
			}
		};
		$o | ConvertTo-Json -Depth 9 | Out-File @params;
	} catch {
		$_;
	}
} *&gt;&amp;1 &gt;&gt; 'C:\Windows\Setup\Scripts\MakeEdgeUninstallable.log';
		</File>
		<File path="C:\Windows\Setup\Scripts\SetStartPins.ps1" transformation="Text">
$json = '{"pinnedList":[]}';
if( [System.Environment]::OSVersion.Version.Build -lt 20000 ) {
	return;
}
$key = 'Registry::HKLM\SOFTWARE\Microsoft\PolicyManager\current\device\Start';
New-Item -Path $key -ItemType 'Directory' -ErrorAction 'SilentlyContinue';
Set-ItemProperty -LiteralPath $key -Name 'ConfigureStartPins' -Value $json -Type 'String';
		</File>
		<File path="C:\Users\Default\AppData\Local\Microsoft\Windows\Shell\LayoutModification.xml" transformation="Text">
&lt;LayoutModificationTemplate Version="1" xmlns="http://schemas.microsoft.com/Start/2014/LayoutModification"&gt;
	&lt;LayoutOptions StartTileGroupCellWidth="6" /&gt;
	&lt;DefaultLayoutOverride&gt;
		&lt;StartLayoutCollection&gt;
			&lt;StartLayout GroupCellWidth="6" xmlns="http://schemas.microsoft.com/Start/2014/FullDefaultLayout" /&gt;
		&lt;/StartLayoutCollection&gt;
	&lt;/DefaultLayoutOverride&gt;
&lt;/LayoutModificationTemplate&gt;
		</File>
		<File path="C:\Windows\Setup\Scripts\SetColorTheme.ps1" transformation="Text">
$lightThemeSystem = 0;
$lightThemeApps = 0;
$accentColorOnStart = 1;
$enableTransparency = 1;
$htmlAccentColor = '#323232';
&amp; {
	$params = @{
		LiteralPath = 'Registry::HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize';
		Force = $true;
		Type = 'DWord';
	};
	Set-ItemProperty @params -Name 'SystemUsesLightTheme' -Value $lightThemeSystem;
	Set-ItemProperty @params -Name 'AppsUseLightTheme' -Value $lightThemeApps;
	Set-ItemProperty @params -Name 'ColorPrevalence' -Value $accentColorOnStart;
	Set-ItemProperty @params -Name 'EnableTransparency' -Value $enableTransparency;
};
&amp; {
	Add-Type -AssemblyName 'System.Drawing';
	$accentColor = [System.Drawing.ColorTranslator]::FromHtml( $htmlAccentColor );

	function ConvertTo-DWord {
		param(
			[System.Drawing.Color]
			$Color
		);
						
		[byte[]] $bytes = @(
			$Color.R;
			$Color.G;
			$Color.B;
			$Color.A;
		);
		return [System.BitConverter]::ToUInt32( $bytes, 0); 
	}

	$startColor = [System.Drawing.Color]::FromArgb( 0xD2, $accentColor );
	Set-ItemProperty -LiteralPath 'Registry::HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Accent' -Name 'StartColorMenu' -Value( ConvertTo-DWord -Color $accentColor ) -Type 'DWord' -Force;
	Set-ItemProperty -LiteralPath 'Registry::HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Accent' -Name 'AccentColorMenu' -Value( ConvertTo-DWord -Color $accentColor ) -Type 'DWord' -Force;
	Set-ItemProperty -LiteralPath 'Registry::HKCU\Software\Microsoft\Windows\DWM' -Name 'AccentColor' -Value( ConvertTo-DWord -Color $accentColor ) -Type 'DWord' -Force;
	$params = @{
		LiteralPath = 'Registry::HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Accent';
		Name = 'AccentPalette';
	};
	$palette = Get-ItemPropertyValue @params;
	$index = 20;
	$palette[ $index++ ] = $accentColor.R;
	$palette[ $index++ ] = $accentColor.G;
	$palette[ $index++ ] = $accentColor.B;
	$palette[ $index++ ] = $accentColor.A;
	Set-ItemProperty @params -Value $palette -Type 'Binary' -Force;
};
		</File>
		<File path="C:\Windows\Setup\Scripts\GetWallpaper.ps1" transformation="Text">
$url = 'https://4kwallpapers.com/images/wallpapers/macro-surface-3d-background-sci-fi-purple-background-3840x2160-7863.png';
return ( Invoke-WebRequest -Uri $url -UseBasicParsing -TimeoutSec 30 ).Content;
		</File>
		<File path="C:\Windows\Setup\Scripts\SetWallpaper.ps1" transformation="Text">
Add-Type -TypeDefinition '
	using System.Drawing;
	using System.Runtime.InteropServices;
	
	public static class WallpaperSetter {
		[DllImport("user32.dll")]
		private static extern bool SetSysColors(
			int cElements, 
			int[] lpaElements,
			int[] lpaRgbValues
		);

		[DllImport("user32.dll")]
		private static extern bool SystemParametersInfo(
			uint uiAction,
			uint uiParam,
			string pvParam,
			uint fWinIni
		);

		public static void SetDesktopBackground(Color color) {
			SystemParametersInfo(20, 0, "", 0);
			SetSysColors(1, new int[] { 1 }, new int[] { ColorTranslator.ToWin32(color) });
		}

		public static void SetDesktopImage(string file) {
			SystemParametersInfo(20, 0, file, 0);
		}
	}
' -ReferencedAssemblies 'System.Drawing';

function Set-WallpaperColor {
	param(
		[string]
		$HtmlColor
	);

	$color = [System.Drawing.ColorTranslator]::FromHtml( $HtmlColor );
	[WallpaperSetter]::SetDesktopBackground( $color );
	Set-ItemProperty -Path 'Registry::HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Wallpapers' -Name 'BackgroundType' -Type 'DWord' -Value 1 -Force;
	Set-ItemProperty -Path 'Registry::HKCU\Control Panel\Desktop' -Name 'WallPaper' -Type 'String' -Value '' -Force;
	Set-ItemProperty -Path 'Registry::HKCU\Control Panel\Colors' -Name 'Background' -Type 'String' -Value "$($color.R) $($color.G) $($color.B)" -Force;
}

function Set-WallpaperImage {
	param(
		[string]
		$LiteralPath
	);

	[WallpaperSetter]::SetDesktopImage( $LiteralPath );
	Set-ItemProperty -Path 'Registry::HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Wallpapers' -Name 'BackgroundType' -Type 'DWord' -Value 0 -Force;
	Set-ItemProperty -Path 'Registry::HKCU\Control Panel\Desktop' -Name 'WallPaper' -Type 'String' -Value $LiteralPath -Force;
}
Set-WallpaperImage -LiteralPath 'C:\Windows\Setup\Scripts\Wallpaper';
		</File>
		<File path="C:\Windows\Setup\Scripts\unattend-01.cmd" transformation="Text">
powercfg.exe -h off
		</File>
		<File path="C:\Windows\Setup\Scripts\unattend-02.ps1" transformation="Text">
Set-MpPreference -DisableRealtimeMonitoring $true;
		</File>
		<File path="C:\Windows\Setup\Scripts\unattend-03.ps1" transformation="Text">
try {
  Set-Volume -DriveLetter C -NewFileSystemLabel "SISTEMA"
}
catch { 
  write-host "????? falha ao renomear disco do sistema"
}
		</File>
		<File path="C:\Windows\Setup\Scripts\unattend-04.ps1" transformation="Text">
Param(
  [string]$is_test    
)

$path_log = "c:\appinstall.log"
$pwsh_msi_path = "c:\pwsh_install.msi"
$pendrive_add_script = "boot\appinstall\windows"
$image_folder = "C:\Users\Default\Pictures"

try {
  Set-ExecutionPolicy -ExecutionPolicy Bypass -Force
}
catch { 
  write-host "????? falha ao setar pol&#xED;tica de execu&#xE7;ao."
}

if (-Not (Test-Path -Path "$path_log\")) {
  New-Item -Path "$path_log" -Force -ItemType Directory  
}

if (-Not (Test-Path -Path "$path_log\apps")) {  
  New-Item -Path "$path_log\apps\" -Force -ItemType Directory
}

try {
  $name_install_log = $env:USERNAME
  
  if ([string]::IsNullOrEmpty($name_install_log)) {  
    $name_install_log = ([System.Security.Principal.WindowsIdentity]::GetCurrent().Name).Replace("\", "-")
  }

  $i = 0
  for (; Test-Path "$path_log\auto-install-$name_install_log.$i.log"; $i++) {}
  $name_install_log = "$name_install_log.$i"

  Start-Transcript -Append "$path_log\custom-install-$name_install_log.log"
}
catch {}

Write-Host "-------------------------------------------------" -BackgroundColor blue
Write-Host "              N&#xE3;o Feche esta janela              " -BackgroundColor blue
Write-Host "-------------------------------------------------" -BackgroundColor blue

write-host "..."

Start-Sleep -Seconds 1

if (-Not ($env:USERNAME -eq "$env:COMPUTERNAME")) {
  if (-Not ($is_test)) {
    try {
      taskkill /F /IM explorer.exe
      taskkill /F /IM msedge.exe
    }
    catch { 
      write-host "."
      write-host "-&gt; falha ao encerar explorer.exe / msedge.exe"
    }
  }
}

Start-Sleep -Seconds 7

####
####
####
function show_log_title {
  param(
    [string]$str_menssagem
  )    

  write-host "."    
  write-host "."
  write-host "$str_menssagem"
}

####
####
####
function sha256{
  Param (
    [Parameter(Mandatory=$true)]
    [string] $ClearString
  )

  $hasher = [System.Security.Cryptography.HashAlgorithm]::Create('sha256')
  $hash = $hasher.ComputeHash([System.Text.Encoding]::UTF8.GetBytes($ClearString))

  $hashString = [System.BitConverter]::ToString($hash)
  $hashString.Replace('-', '')  
  write-host $hashString
}

####
####
####
function download_save(){
  param(
    [string]$url,
    [string]$dest
  )  
  
  if (-Not (Test-Path "$dest")) {
    write-host "Baixando URL..."

    write-host "Invoke-WebRequest '$url' -OutFile '$dest'"

    try{
      Invoke-WebRequest "$url" -OutFile "$dest"
      write-host "---&gt; Pronto."

      if (Test-path "$dest"){
        write-host "---&gt; Baixado e salvo."
      }else{
        write-host ":::: Baixado, mas N&#xC3;O foi salvo no destino."
      }
    }catch{
      write-host "Falha ao baixar arquivo"
    }
  }else{
    write-host "Arquivo j&#xE1; existente."
  }
}

####
####
####
function isowin_install_pwsh7 {
  show_log_title "### Instalando powershell 7"

  $x = Get-Command "pwsh" -errorAction SilentlyContinue
  if (-Not ([string]::IsNullOrEmpty($x))) {
    return ""
  }

  try {
    download_save "https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-x64.msi" "$pwsh_msi_path"    

    write-host "&amp; msiexec.exe /package '$pwsh_msi_path' /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ADD_FILE_CONTEXT_MENU_RUNPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1 USE_MU=1 ENABLE_MU=1 ADD_PATH=1 | write-host"
    &amp; msiexec.exe /package "$pwsh_msi_path" /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ADD_FILE_CONTEXT_MENU_RUNPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1 USE_MU=1 ENABLE_MU=1 ADD_PATH=1 | write-host  

    Start-Sleep -Seconds 1

    $x1 = Get-Command "pwsh" -errorAction SilentlyContinue
    if (-Not ([string]::IsNullOrEmpty($x1))) {
      Remove-Item "$pwsh_msi_path" -Force
    }
  }
  catch {
    write-show_log_title "????? FALHA AO INSTALAR POWESHELL 7"
  }
}

####
####
####
function isowin_winget_update {
  show_log_title "&gt;&gt;&gt; Atualizando winget..."

  try {
    $winget = $null
    $DesktopAppInstaller = "C:\Program Files\WindowsApps\Microsoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe"
    $SystemContext = Resolve-Path "$DesktopAppInstaller"
    if ($SystemContext) { $SystemContext = $SystemContext[-1].Path }
    $UserContext = Get-Command winget.exe -ErrorAction SilentlyContinue
    if ($UserContext) { $winget = $UserContext.Source }
    elseif (Test-Path "$SystemContext\AppInstallerCLI.exe") { $winget = "$SystemContext\AppInstallerCLI.exe" }
    elseif (Test-Path "$SystemContext\winget.exe") { $winget = "$SystemContext\winget.exe" }
    else { return $false }
    if ($null -ne $winget) { "winget content: $winget" }
    # Logs $(env:LOCALAPPDATA)\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState\DiagOutputDir
  }
  catch {
    write-host "::: FALHA ao setar winget"
  }
  

  try {
    write-host "&amp; '$winget' update --all | write-host"
    &amp; "$winget" update --all | write-host

    write-host "------&gt; winget atualizado!"
  }
  catch {
    # Catch any error
    show_log_title "winget: Falha ao atualizar winget, tentando com PWSH 7"

    switch ($PSVersionTable.PSVersion.Major) {

      ## 7 and (hopefully) later versions
      { $_ -ge 7 } {
        Write-Host "---&gt; j&#xE1; est&#xE1;vamos no PSWH 7"
      } # PowerShell 7

      ## 5, and only 5. We aren't interested in previous versions.
      5 {
        isowin_install_pwsh7

        try {
          write-host "&amp; pwsh -NoProfile -Command 'winget update --all' | write-host"
          &amp; pwsh -NoProfile -Command "winget update --all" | write-host

        }
        catch {
          show_log_title "????? FALHA ao atualizar winget '$name_id'"
        }
      } # PowerShell 5

      default {
        ## If it's not 7 or later, and it's not 5, then we aren't doing it.
        write-host "??? Unsupported PowerShell version [1]."

      } # default

    } # switch    
  }
}

####
####
####
function isowin_winget_install {
  param(
    [string]$name_id
  )

  show_log_title "&gt;&gt;&gt; Winget: Instalando $name_id"
  write-host "- Configurando Winget"

  try {
    $winget = $null
    $DesktopAppInstaller = "C:\Program Files\WindowsApps\Microsoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe"
    $SystemContext = Resolve-Path "$DesktopAppInstaller"
    if ($SystemContext) { $SystemContext = $SystemContext[-1].Path }
    $UserContext = Get-Command winget.exe -ErrorAction SilentlyContinue
    if ($UserContext) { $winget = $UserContext.Source }
    elseif (Test-Path "$SystemContext\AppInstallerCLI.exe") { $winget = "$SystemContext\AppInstallerCLI.exe" }
    elseif (Test-Path "$SystemContext\winget.exe") { $winget = "$SystemContext\winget.exe" }
    else { return $false }
    if ($null -ne $winget) { "winget content: $winget" }
    # Logs $(env:LOCALAPPDATA)\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState\DiagOutputDir
  }
  catch {
    write-host "::: FALHA ao configurar winget"
  }

  $i = 0
  for (; Test-Path "$path_log\apps\$name_id.winget.$i.log"; $i++) {}
  $path_log_full = "$path_log\apps\$name_id.winget.$i.log"
  "Log: $path_log_full"

  try {
    write-host "&amp; '$winget' install --id '$name_id' --verbose --exact --silent --disable-interactivity --accept-package-agreements --accept-source-agreements | Out-File -FilePath '$path_log_full'"
    &amp; "$winget" install --id "$name_id" --verbose --exact --silent --disable-interactivity --accept-package-agreements --accept-source-agreements | Out-File -FilePath "$path_log_full"    

    write-host "------&gt; $name_id instalado."
  }
  catch {
    # Catch any error
    write-host "Winget: Falha ao instalar '$name_id', tentando com PWSH 7"

    switch ($PSVersionTable.PSVersion.Major) {
      ## 7 and (hopefully) later versions
      { $_ -ge 7 } {
        Write-Host "---&gt; j&#xE1; est&#xE1;vamos no PSWH 7"
        return 0
      } # PowerShell 7

      ## 5, and only 5. We aren't interested in previous versions.
      5 {
        isowin_install_pwsh7

        try {          
          write-host "&amp; pwsh -NoProfile -Command '$winget install --id '$name_id' --verbose --exact --silent --disable-interactivity --accept-package-agreements --accept-source-agreements'  | Out-File -FilePath '$path_log_full'"
          &amp; pwsh -NoProfile -Command "$winget install --id "$name_id" --verbose --exact --silent --disable-interactivity --accept-package-agreements --accept-source-agreements"  | Out-File -FilePath "$path_log_full"
          write-host "------&gt; $name_id supostamente instalado."

        }
        catch {
          write-host "????? FALHA final ao instalar '$name_id'"
        }

      } # PowerShell 5

      default {
        ## If it's not 7 or later, and it's not 5, then we aren't doing it.
        Write-Host "??? Unsupported PowerShell version [2]."

      } # default
    } # switch    
  }
}

####
####
####
function appinstall_find_path() {    
  try {
    $Drives = Get-PSDrive -PSProvider 'FileSystem'

    foreach ($Drive in $drives) {
      if (Test-Path -Path "${Drive}:\$pendrive_add_script") {
        return "${Drive}:\$pendrive_add_script"
      }
    }

    return ""
  }  
  catch {    
    return ""
  }
}

####
####
####
$appsinstall_folder = appinstall_find_path

function isowin_install_app {
  param(
    [string]$name_id
  )

  show_log_title "Instalando $name_id"

  if (-Not ([string]::IsNullOrEmpty($appsinstall_folder))) {
    Write-Host "- Pasta offline exitente"
    $nn = ""

    if (Test-Path -Path "${appsinstall_folder}\${name_id}.exe") {
      $nn = "${appsinstall_folder}\${name_id}.exe"
    }
    elseif (Test-Path -Path "${appsinstall_folder}\$name_id.msi") {
      $nn = "${appsinstall_folder}\$splited.msi"
    }
    
    if ([string]::IsNullOrEmpty($nn)) {
      $splited = $name_id.split(".")[-1]

      if (Test-Path -Path "${appsinstall_folder}\$splited.exe") {
        $nn = "${appsinstall_folder}\$splited.exe"
      }
      elseif (Test-Path -Path "${appsinstall_folder}\$splited.msi") {
        $nn = "${appsinstall_folder}\$splited.msi"
      }
    }
    
    if (-Not ([string]::IsNullOrEmpty($nn))) {      
      $extencao = $nn.split(".")[-1]
      Write-Host "- Arquivo offline '.$extencao' encontrado"
      Write-Host "= '$nn'"
      Write-Host "- Executando..."

      try {
        if ("msi" -eq "$extencao") {        
          write-host "&amp; msiexec.exe /i '$nn' /qn -Wait /L*V '$path_log\apps\$name_id.log'"
          &amp; msiexec.exe /i "$nn" /qn -Wait /L*V "$path_log\apps\$name_id.log"
        }
        elseif ("exe" -eq "$extencao") {
          write-host "$ExecutionContext.InvokeCommand.ExpandString('$nn | Out-File -FilePath '$path_log_full')"
          $ExecutionContext.InvokeCommand.ExpandString("$nn | Out-File -FilePath '$path_log_full'")
        }        
      }
      catch {
        write-host "??? Falha ao executar aquivo de instala&#xE7;&#xE3;o offline, tentando via winget... "
        isowin_winget_install $name_id
      }

      return ""
    }
  }
  
  write-host "- Arquivo de instala&#xE7;&#xE3;o offline inexistente, tentando via winget..."

  isowin_winget_install $name_id
}

write-host "Iniciando..."

Start-Sleep -Seconds 3

#show_log_title "### Fix winget, for&#xE7;ando disponibiliza&#xE7;&#xE3;o de winget no contexto do sistema"

#try {
#  Add-AppxPackage -RegisterByFamilyName -MainPackage Microsoft.DesktopAppInstaller_8wekyb3d8bbwe | write-host
#}
#catch { 
#  write-host "????? falha ao executar Add-AppxPackage "
#}

show_log_title "### Winget setup fix 1"

try {
  $ResolveWingetPath = Resolve-Path "C:\Program Files\WindowsApps\Microsoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe"
  if ($ResolveWingetPath) {
    $WingetPath = $ResolveWingetPath[-1].Path
  }

  $config

  Write-Host "-&gt; $wingetpath"
  Set-Location "$wingetpath"
}
catch {
  write-show_log_title "????? FALHA ao executar FIX 1"
}

write-host "Atual: $pwd"

show_log_title "### Baixando imagens"

$image_folder = "C:\Users\Default\Pictures"

$imagens = @(
  'kutt.it/MKEL4E',  
  'kutt.it/waGYaN',
  'kutt.it/ZX7Z7M',
  'kutt.it/7LqtRa',
  'kutt.it/F6c8Vt',
  'kutt.it/2qW2Gc',
  'kutt.it/hND3BV',
  'kutt.it/aD6eLH',
  't.ly/vW5fp',
  't.ly/cSo0i',
  't.ly/UCvTB',
  't.ly/mr1Bx',
  't.ly/ytgxo',
  'bit.ly/4h0BPfS',
  'urlr.me/JMAUzy',
  'urlr.me/ZGatXc',
  'urlr.me/NtnRgq',
  'urlr.me/G4WeBq',
  'urlr.me/9fQhcg',
  'urlr.me/ekgUmG',
  'urlr.me/EQKxr8',
  'urlr.me/Jnq5BA',
  'urlr.me/rXGsMb',
  'urlr.me/68FdX3',
  'urlr.me/q7Hw6T',
  'urlr.me/CNR8Mq',
  'urlr.me/tsazqm',
  'urlr.me/jN5SGP',
  'urlr.me/THY95N',
  'urlr.me/h379Wc',
  'urlr.me/FM7EhG',
  'urlr.me/FEduUr',
  'urlr.me/e2WYCU',
  'urlr.me/VyeEaP',
  'urlr.me/W2TvAt',
  'urlr.me/NbufaY',
  'urlr.me/yhtS5H',
  'urlr.me/nj4k9Q',
  'urlr.me/GXdNQc',
  'urlr.me/JA6BhN',
  'urlr.me/tG749C',
  'urlr.me/m9xrBC',
  'urlr.me/mTvKQn',
  'urlr.me/VnzMYR',
  'urlr.me/HVPgFY',
  'urlr.me/em9kjv',
  'urlr.me/MHQVhE',
  'urlr.me/db7Pyv',
  'urlr.me/tyEpvV',
  'urlr.me/NbG7fE',
  'urlr.me/hW95dg',
  'urlr.me/VphZAd',
  'urlr.me/JpAQZ5',
  'urlr.me/xM4qDQ',
  'urlr.me/qNBRPk',
  'urlr.me/nPQekc',
  'urlr.me/4cbBnE',
  'urlr.me/8UaRFu',
  'urlr.me/fVBQnr',
  'urlr.me/hPu24n',
  'urlr.me/23j8vE',
  'urlr.me/dpgV5P',
  'urlr.me/frZzxd',
  'urlr.me/efyTpK',
  'urlr.me/Qn4T6z',
  'urlr.me/ZsYwdC',
  'urlr.me/NhfdQu',
  'urlr.me/9gDwkE',
  'urlr.me/UasKT5',
  'urlr.me/gZqCdK',
  'urlr.me/eau7Mt',
  'urlr.me/6s3hvN',
  'urlr.me/SBGyFA',
  'urlr.me/jgQdca',
  'urlr.me/Hbd9Vc',
  'urlr.me/jmvw3X',
  'urlr.me/yjtfv6',
  'urlr.me/4CazJD',
  'urlr.me/JCpGnz',
  'urlr.me/nZWsHa',
  'urlr.me/NfVRGb',
  'urlr.me/pAEUfG',
  'urlr.me/89j5tD',
  'urlr.me/mEtKJh',
  'urlr.me/hqdsB9',
  'urlr.me/5mPf8Q',
  'urlr.me/RfXp34',
  'urlr.me/NYCtpU',
  'urlr.me/H7t6Xb',
  'urlr.me/YAzsFP',
  'urlr.me/uZNKgR',
  'urlr.me/Q5Uv9h',
  'urlr.me/hT9jMx',
  'urlr.me/ueaRZy',
  'urlr.me/XGjTcF',
  'urlr.me/AG9yxp',
  'urlr.me/epDqRG',
  'urlr.me/U9MvtD',
  'urlr.me/z2ZRSy',
  'urlr.me/p6xSYz',
  'urlr.me/XYRQHq',
  'urlr.me/Edwahm',
  'urlr.me/tqQdJF',
  'urlr.me/3GtQHT',
  'urlr.me/68p9G5',
  'urlr.me/PTvBRY',
  'urlr.me/fV9tKB',
  'urlr.me/vXVN9K',
  'urlr.me/NxtP3T',
  'urlr.me/zGankf'
)

if (-Not ($env:USERNAME -eq "$env:COMPUTERNAME")) {
  $image_folder = "C:\Users\${env:USERNAME}\Pictures"
}

if (-Not (Test-Path -Path "$image_folder\wallpappers\")) {  
  New-Item -Path "$image_folder\wallpappers\" -Force -ItemType Directory
}

$i = 0;
foreach ($u in $imagens){
  $shaname = sha256 $u     
  download_save "$u" "$image_folder\wallpappers\$shaname.jpg"  
}

show_log_title "### Definindo tela de bloqueio personalizada"

$regKey = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization'
# create the key if it doesn't already exist
if (!(Test-Path -Path $regKey)) {
   $null = New-Item -Path $regKey
}

# now set the registry entry
try{
  Set-ItemProperty -Path $regKey -Name 'LockScreenImage' -value "$image_folder\5F3C1A878379373A9853DC58CC78D414212DFD6063F9E8F48832ED940502902B.jpg"
}catch{
  write-host "????? FALHA ao definir tela de bloqueio"
}

isowin_winget_update

show_log_title "### Instalando APPs basiquissimos..."

isowin_install_app "Oracle.JavaRuntimeEnvironment"
isowin_install_app "Microsoft.DirectX"
isowin_install_app "CodecGuide.K-LiteCodecPack.Mega"
isowin_install_app "7zip.7zip"
isowin_install_app "Microsoft.VisualStudioCode"

show_log_title "Continuar padr&#xE3;o ou seguir 'apps.lst' do pendrive?"

# verifica se tem lista de apps no pendrive
if (-Not (Test-Path "$appsinstall_folder\apps.lst")) {
  Write-Host "---&gt; usando o padrao..."  
  isowin_install_app "VideoLAN.VLC"  
  isowin_install_app "Google.Chrome"
  isowin_install_app "Brave.Brave"
  isowin_install_app "SumatraPDF.SumatraPDF"
  isowin_install_app "PDFsam.PDFsam"
  isowin_install_app "QL-Win.QuickLook"
  isowin_install_app "Piriform.Defraggler"
  isowin_install_app "CrystalDewWorld.CrystalDiskInfo"
  isowin_install_app "qBittorrent.qBittorrent"
  isowin_install_app "TheDocumentFoundation.LibreOffice"
}
else {
  Write-Host "---&gt; usando 'apps.lst do pendrive'..."

  foreach ($line in Get-Content "$appsinstall_folder\apps.lst") {
    isowin_install_app $line
  }  
}

show_log_title "Executar script 'run.ps1' no pendrive?"

# tenta executar o scrip localizado no pendrive
if (Test-Path "$appsinstall_folder\run.ps1") {
  Write-Host "---&gt; Sim, executando..."
  pwsh.exe -NoProfile -Command "Get-Content -LiteralPath '$appsinstall_folder\run.ps1' -Raw | Invoke-Expression;" | write-host
}
else {
  Write-Host "---&gt; N&#xE3;o, n&#xE3;o localizado."
}

show_log_title "### Desabilitando Hiberna&#xE7;&#xE3;o."

try{
  powercfg.exe /hibernate off
}catch{
  write-host "---&gt; Falha ao desabilitar hiberna&#xE7;&#xE3;o."
}

write-host "CONCLUIDO"

Write-Host "-------------------------------------------------" -BackgroundColor blue
Write-Host "                   REINICIANDO                   " -BackgroundColor blue
Write-Host "-------------------------------------------------" -BackgroundColor blue

try {
  Stop-Transcript
}
catch {}

if (-Not ($env:USERNAME -eq "$env:COMPUTERNAME")) {
  if (-Not ($is_test)) {
    Restart-Computer
  }
}
		</File>
		<File path="C:\Windows\Setup\Scripts\unattend-05.ps1" transformation="Text">
Param(
  [string]$is_test    
)

$path_log = "c:\appinstall.log"
$pwsh_msi_path = "c:\pwsh_install.msi"
$pendrive_add_script = "boot\appinstall\windows"
$image_folder = "C:\Users\Default\Pictures"

try {
  Set-ExecutionPolicy -ExecutionPolicy Bypass -Force
}
catch { 
  write-host "????? falha ao setar pol&#xED;tica de execu&#xE7;ao."
}

if (-Not (Test-Path -Path "$path_log\")) {
  New-Item -Path "$path_log" -Force -ItemType Directory  
}

if (-Not (Test-Path -Path "$path_log\apps")) {  
  New-Item -Path "$path_log\apps\" -Force -ItemType Directory
}

try {
  $name_install_log = $env:USERNAME
  
  if ([string]::IsNullOrEmpty($name_install_log)) {  
    $name_install_log = ([System.Security.Principal.WindowsIdentity]::GetCurrent().Name).Replace("\", "-")
  }

  $i = 0
  for (; Test-Path "$path_log\auto-install-$name_install_log.$i.log"; $i++) {}
  $name_install_log = "$name_install_log.$i"

  Start-Transcript -Append "$path_log\custom-install-$name_install_log.log"
}
catch {}

Write-Host "-------------------------------------------------" -BackgroundColor blue
Write-Host "              N&#xE3;o Feche esta janela              " -BackgroundColor blue
Write-Host "-------------------------------------------------" -BackgroundColor blue

write-host "..."

Start-Sleep -Seconds 1

if (-Not ($env:USERNAME -eq "$env:COMPUTERNAME")) {
  if (-Not ($is_test)) {
    try {
      taskkill /F /IM explorer.exe
      taskkill /F /IM msedge.exe
    }
    catch { 
      write-host "."
      write-host "-&gt; falha ao encerar explorer.exe / msedge.exe"
    }
  }
}

Start-Sleep -Seconds 7

####
####
####
function show_log_title {
  param(
    [string]$str_menssagem
  )    

  write-host "."    
  write-host "."
  write-host "$str_menssagem"
}

####
####
####
function sha256{
  Param (
    [Parameter(Mandatory=$true)]
    [string] $ClearString
  )

  $hasher = [System.Security.Cryptography.HashAlgorithm]::Create('sha256')
  $hash = $hasher.ComputeHash([System.Text.Encoding]::UTF8.GetBytes($ClearString))

  $hashString = [System.BitConverter]::ToString($hash)
  $hashString.Replace('-', '')  
  write-host $hashString
}

####
####
####
function download_save(){
  param(
    [string]$url,
    [string]$dest
  )  
  
  if (-Not (Test-Path "$dest")) {
    write-host "Baixando URL..."

    write-host "Invoke-WebRequest '$url' -OutFile '$dest'"

    try{
      Invoke-WebRequest "$url" -OutFile "$dest"
      write-host "---&gt; Pronto."

      if (Test-path "$dest"){
        write-host "---&gt; Baixado e salvo."
      }else{
        write-host ":::: Baixado, mas N&#xC3;O foi salvo no destino."
      }
    }catch{
      write-host "Falha ao baixar arquivo"
    }
  }else{
    write-host "Arquivo j&#xE1; existente."
  }
}

####
####
####
function isowin_install_pwsh7 {
  show_log_title "### Instalando powershell 7"

  $x = Get-Command "pwsh" -errorAction SilentlyContinue
  if (-Not ([string]::IsNullOrEmpty($x))) {
    return ""
  }

  try {
    download_save "https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-x64.msi" "$pwsh_msi_path"    

    write-host "&amp; msiexec.exe /package '$pwsh_msi_path' /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ADD_FILE_CONTEXT_MENU_RUNPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1 USE_MU=1 ENABLE_MU=1 ADD_PATH=1 | write-host"
    &amp; msiexec.exe /package "$pwsh_msi_path" /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ADD_FILE_CONTEXT_MENU_RUNPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1 USE_MU=1 ENABLE_MU=1 ADD_PATH=1 | write-host  

    Start-Sleep -Seconds 1

    $x1 = Get-Command "pwsh" -errorAction SilentlyContinue
    if (-Not ([string]::IsNullOrEmpty($x1))) {
      Remove-Item "$pwsh_msi_path" -Force
    }
  }
  catch {
    write-show_log_title "????? FALHA AO INSTALAR POWESHELL 7"
  }
}

####
####
####
function isowin_winget_update {
  show_log_title "&gt;&gt;&gt; Atualizando winget..."

  try {
    $winget = $null
    $DesktopAppInstaller = "C:\Program Files\WindowsApps\Microsoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe"
    $SystemContext = Resolve-Path "$DesktopAppInstaller"
    if ($SystemContext) { $SystemContext = $SystemContext[-1].Path }
    $UserContext = Get-Command winget.exe -ErrorAction SilentlyContinue
    if ($UserContext) { $winget = $UserContext.Source }
    elseif (Test-Path "$SystemContext\AppInstallerCLI.exe") { $winget = "$SystemContext\AppInstallerCLI.exe" }
    elseif (Test-Path "$SystemContext\winget.exe") { $winget = "$SystemContext\winget.exe" }
    else { return $false }
    if ($null -ne $winget) { "winget content: $winget" }
    # Logs $(env:LOCALAPPDATA)\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState\DiagOutputDir
  }
  catch {
    write-host "::: FALHA ao setar winget"
  }
  

  try {
    write-host "&amp; '$winget' update --all | write-host"
    &amp; "$winget" update --all | write-host

    write-host "------&gt; winget atualizado!"
  }
  catch {
    # Catch any error
    show_log_title "winget: Falha ao atualizar winget, tentando com PWSH 7"

    switch ($PSVersionTable.PSVersion.Major) {

      ## 7 and (hopefully) later versions
      { $_ -ge 7 } {
        Write-Host "---&gt; j&#xE1; est&#xE1;vamos no PSWH 7"
      } # PowerShell 7

      ## 5, and only 5. We aren't interested in previous versions.
      5 {
        isowin_install_pwsh7

        try {
          write-host "&amp; pwsh -NoProfile -Command 'winget update --all' | write-host"
          &amp; pwsh -NoProfile -Command "winget update --all" | write-host

        }
        catch {
          show_log_title "????? FALHA ao atualizar winget '$name_id'"
        }
      } # PowerShell 5

      default {
        ## If it's not 7 or later, and it's not 5, then we aren't doing it.
        write-host "??? Unsupported PowerShell version [1]."

      } # default

    } # switch    
  }
}

####
####
####
function isowin_winget_install {
  param(
    [string]$name_id
  )

  show_log_title "&gt;&gt;&gt; Winget: Instalando $name_id"
  write-host "- Configurando Winget"

  try {
    $winget = $null
    $DesktopAppInstaller = "C:\Program Files\WindowsApps\Microsoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe"
    $SystemContext = Resolve-Path "$DesktopAppInstaller"
    if ($SystemContext) { $SystemContext = $SystemContext[-1].Path }
    $UserContext = Get-Command winget.exe -ErrorAction SilentlyContinue
    if ($UserContext) { $winget = $UserContext.Source }
    elseif (Test-Path "$SystemContext\AppInstallerCLI.exe") { $winget = "$SystemContext\AppInstallerCLI.exe" }
    elseif (Test-Path "$SystemContext\winget.exe") { $winget = "$SystemContext\winget.exe" }
    else { return $false }
    if ($null -ne $winget) { "winget content: $winget" }
    # Logs $(env:LOCALAPPDATA)\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState\DiagOutputDir
  }
  catch {
    write-host "::: FALHA ao configurar winget"
  }

  $i = 0
  for (; Test-Path "$path_log\apps\$name_id.winget.$i.log"; $i++) {}
  $path_log_full = "$path_log\apps\$name_id.winget.$i.log"
  "Log: $path_log_full"

  try {
    write-host "&amp; '$winget' install --id '$name_id' --verbose --exact --silent --disable-interactivity --accept-package-agreements --accept-source-agreements | Out-File -FilePath '$path_log_full'"
    &amp; "$winget" install --id "$name_id" --verbose --exact --silent --disable-interactivity --accept-package-agreements --accept-source-agreements | Out-File -FilePath "$path_log_full"    

    write-host "------&gt; $name_id instalado."
  }
  catch {
    # Catch any error
    write-host "Winget: Falha ao instalar '$name_id', tentando com PWSH 7"

    switch ($PSVersionTable.PSVersion.Major) {
      ## 7 and (hopefully) later versions
      { $_ -ge 7 } {
        Write-Host "---&gt; j&#xE1; est&#xE1;vamos no PSWH 7"
        return 0
      } # PowerShell 7

      ## 5, and only 5. We aren't interested in previous versions.
      5 {
        isowin_install_pwsh7

        try {          
          write-host "&amp; pwsh -NoProfile -Command '$winget install --id '$name_id' --verbose --exact --silent --disable-interactivity --accept-package-agreements --accept-source-agreements'  | Out-File -FilePath '$path_log_full'"
          &amp; pwsh -NoProfile -Command "$winget install --id "$name_id" --verbose --exact --silent --disable-interactivity --accept-package-agreements --accept-source-agreements"  | Out-File -FilePath "$path_log_full"
          write-host "------&gt; $name_id supostamente instalado."

        }
        catch {
          write-host "????? FALHA final ao instalar '$name_id'"
        }

      } # PowerShell 5

      default {
        ## If it's not 7 or later, and it's not 5, then we aren't doing it.
        Write-Host "??? Unsupported PowerShell version [2]."

      } # default
    } # switch    
  }
}

####
####
####
function appinstall_find_path() {    
  try {
    $Drives = Get-PSDrive -PSProvider 'FileSystem'

    foreach ($Drive in $drives) {
      if (Test-Path -Path "${Drive}:\$pendrive_add_script") {
        return "${Drive}:\$pendrive_add_script"
      }
    }

    return ""
  }  
  catch {    
    return ""
  }
}

####
####
####
$appsinstall_folder = appinstall_find_path

function isowin_install_app {
  param(
    [string]$name_id
  )

  show_log_title "Instalando $name_id"

  if (-Not ([string]::IsNullOrEmpty($appsinstall_folder))) {
    Write-Host "- Pasta offline exitente"
    $nn = ""

    if (Test-Path -Path "${appsinstall_folder}\${name_id}.exe") {
      $nn = "${appsinstall_folder}\${name_id}.exe"
    }
    elseif (Test-Path -Path "${appsinstall_folder}\$name_id.msi") {
      $nn = "${appsinstall_folder}\$splited.msi"
    }
    
    if ([string]::IsNullOrEmpty($nn)) {
      $splited = $name_id.split(".")[-1]

      if (Test-Path -Path "${appsinstall_folder}\$splited.exe") {
        $nn = "${appsinstall_folder}\$splited.exe"
      }
      elseif (Test-Path -Path "${appsinstall_folder}\$splited.msi") {
        $nn = "${appsinstall_folder}\$splited.msi"
      }
    }
    
    if (-Not ([string]::IsNullOrEmpty($nn))) {      
      $extencao = $nn.split(".")[-1]
      Write-Host "- Arquivo offline '.$extencao' encontrado"
      Write-Host "= '$nn'"
      Write-Host "- Executando..."

      try {
        if ("msi" -eq "$extencao") {        
          write-host "&amp; msiexec.exe /i '$nn' /qn -Wait /L*V '$path_log\apps\$name_id.log'"
          &amp; msiexec.exe /i "$nn" /qn -Wait /L*V "$path_log\apps\$name_id.log"
        }
        elseif ("exe" -eq "$extencao") {
          write-host "$ExecutionContext.InvokeCommand.ExpandString('$nn | Out-File -FilePath '$path_log_full')"
          $ExecutionContext.InvokeCommand.ExpandString("$nn | Out-File -FilePath '$path_log_full'")
        }        
      }
      catch {
        write-host "??? Falha ao executar aquivo de instala&#xE7;&#xE3;o offline, tentando via winget... "
        isowin_winget_install $name_id
      }

      return ""
    }
  }
  
  write-host "- Arquivo de instala&#xE7;&#xE3;o offline inexistente, tentando via winget..."

  isowin_winget_install $name_id
}

write-host "Iniciando..."

Start-Sleep -Seconds 3

#show_log_title "### Fix winget, for&#xE7;ando disponibiliza&#xE7;&#xE3;o de winget no contexto do sistema"

#try {
#  Add-AppxPackage -RegisterByFamilyName -MainPackage Microsoft.DesktopAppInstaller_8wekyb3d8bbwe | write-host
#}
#catch { 
#  write-host "????? falha ao executar Add-AppxPackage "
#}

show_log_title "### Winget setup fix 1"

try {
  $ResolveWingetPath = Resolve-Path "C:\Program Files\WindowsApps\Microsoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe"
  if ($ResolveWingetPath) {
    $WingetPath = $ResolveWingetPath[-1].Path
  }

  $config

  Write-Host "-&gt; $wingetpath"
  Set-Location "$wingetpath"
}
catch {
  write-show_log_title "????? FALHA ao executar FIX 1"
}

write-host "Atual: $pwd"

show_log_title "### Baixando imagens"

$image_folder = "C:\Users\Default\Pictures"

$imagens = @(
  'kutt.it/MKEL4E',  
  'kutt.it/waGYaN',
  'kutt.it/ZX7Z7M',
  'kutt.it/7LqtRa',
  'kutt.it/F6c8Vt',
  'kutt.it/2qW2Gc',
  'kutt.it/hND3BV',
  'kutt.it/aD6eLH',
  't.ly/vW5fp',
  't.ly/cSo0i',
  't.ly/UCvTB',
  't.ly/mr1Bx',
  't.ly/ytgxo',
  'bit.ly/4h0BPfS',
  'urlr.me/JMAUzy',
  'urlr.me/ZGatXc',
  'urlr.me/NtnRgq',
  'urlr.me/G4WeBq',
  'urlr.me/9fQhcg',
  'urlr.me/ekgUmG',
  'urlr.me/EQKxr8',
  'urlr.me/Jnq5BA',
  'urlr.me/rXGsMb',
  'urlr.me/68FdX3',
  'urlr.me/q7Hw6T',
  'urlr.me/CNR8Mq',
  'urlr.me/tsazqm',
  'urlr.me/jN5SGP',
  'urlr.me/THY95N',
  'urlr.me/h379Wc',
  'urlr.me/FM7EhG',
  'urlr.me/FEduUr',
  'urlr.me/e2WYCU',
  'urlr.me/VyeEaP',
  'urlr.me/W2TvAt',
  'urlr.me/NbufaY',
  'urlr.me/yhtS5H',
  'urlr.me/nj4k9Q',
  'urlr.me/GXdNQc',
  'urlr.me/JA6BhN',
  'urlr.me/tG749C',
  'urlr.me/m9xrBC',
  'urlr.me/mTvKQn',
  'urlr.me/VnzMYR',
  'urlr.me/HVPgFY',
  'urlr.me/em9kjv',
  'urlr.me/MHQVhE',
  'urlr.me/db7Pyv',
  'urlr.me/tyEpvV',
  'urlr.me/NbG7fE',
  'urlr.me/hW95dg',
  'urlr.me/VphZAd',
  'urlr.me/JpAQZ5',
  'urlr.me/xM4qDQ',
  'urlr.me/qNBRPk',
  'urlr.me/nPQekc',
  'urlr.me/4cbBnE',
  'urlr.me/8UaRFu',
  'urlr.me/fVBQnr',
  'urlr.me/hPu24n',
  'urlr.me/23j8vE',
  'urlr.me/dpgV5P',
  'urlr.me/frZzxd',
  'urlr.me/efyTpK',
  'urlr.me/Qn4T6z',
  'urlr.me/ZsYwdC',
  'urlr.me/NhfdQu',
  'urlr.me/9gDwkE',
  'urlr.me/UasKT5',
  'urlr.me/gZqCdK',
  'urlr.me/eau7Mt',
  'urlr.me/6s3hvN',
  'urlr.me/SBGyFA',
  'urlr.me/jgQdca',
  'urlr.me/Hbd9Vc',
  'urlr.me/jmvw3X',
  'urlr.me/yjtfv6',
  'urlr.me/4CazJD',
  'urlr.me/JCpGnz',
  'urlr.me/nZWsHa',
  'urlr.me/NfVRGb',
  'urlr.me/pAEUfG',
  'urlr.me/89j5tD',
  'urlr.me/mEtKJh',
  'urlr.me/hqdsB9',
  'urlr.me/5mPf8Q',
  'urlr.me/RfXp34',
  'urlr.me/NYCtpU',
  'urlr.me/H7t6Xb',
  'urlr.me/YAzsFP',
  'urlr.me/uZNKgR',
  'urlr.me/Q5Uv9h',
  'urlr.me/hT9jMx',
  'urlr.me/ueaRZy',
  'urlr.me/XGjTcF',
  'urlr.me/AG9yxp',
  'urlr.me/epDqRG',
  'urlr.me/U9MvtD',
  'urlr.me/z2ZRSy',
  'urlr.me/p6xSYz',
  'urlr.me/XYRQHq',
  'urlr.me/Edwahm',
  'urlr.me/tqQdJF',
  'urlr.me/3GtQHT',
  'urlr.me/68p9G5',
  'urlr.me/PTvBRY',
  'urlr.me/fV9tKB',
  'urlr.me/vXVN9K',
  'urlr.me/NxtP3T',
  'urlr.me/zGankf'
)

if (-Not ($env:USERNAME -eq "$env:COMPUTERNAME")) {
  $image_folder = "C:\Users\${env:USERNAME}\Pictures"
}

if (-Not (Test-Path -Path "$image_folder\wallpappers\")) {  
  New-Item -Path "$image_folder\wallpappers\" -Force -ItemType Directory
}

$i = 0;
foreach ($u in $imagens){
  $shaname = sha256 $u     
  download_save "$u" "$image_folder\wallpappers\$shaname.jpg"  
}

show_log_title "### Definindo tela de bloqueio personalizada"

$regKey = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization'
# create the key if it doesn't already exist
if (!(Test-Path -Path $regKey)) {
   $null = New-Item -Path $regKey
}

# now set the registry entry
try{
  Set-ItemProperty -Path $regKey -Name 'LockScreenImage' -value "$image_folder\5F3C1A878379373A9853DC58CC78D414212DFD6063F9E8F48832ED940502902B.jpg"
}catch{
  write-host "????? FALHA ao definir tela de bloqueio"
}

isowin_winget_update

show_log_title "### Instalando APPs basiquissimos..."

isowin_install_app "Oracle.JavaRuntimeEnvironment"
isowin_install_app "Microsoft.DirectX"
isowin_install_app "CodecGuide.K-LiteCodecPack.Mega"
isowin_install_app "7zip.7zip"
isowin_install_app "Microsoft.VisualStudioCode"

show_log_title "Continuar padr&#xE3;o ou seguir 'apps.lst' do pendrive?"

# verifica se tem lista de apps no pendrive
if (-Not (Test-Path "$appsinstall_folder\apps.lst")) {
  Write-Host "---&gt; usando o padrao..."  
  isowin_install_app "VideoLAN.VLC"  
  isowin_install_app "Google.Chrome"
  isowin_install_app "Brave.Brave"
  isowin_install_app "SumatraPDF.SumatraPDF"
  isowin_install_app "PDFsam.PDFsam"
  isowin_install_app "QL-Win.QuickLook"
  isowin_install_app "Piriform.Defraggler"
  isowin_install_app "CrystalDewWorld.CrystalDiskInfo"
  isowin_install_app "qBittorrent.qBittorrent"
  isowin_install_app "TheDocumentFoundation.LibreOffice"
}
else {
  Write-Host "---&gt; usando 'apps.lst do pendrive'..."

  foreach ($line in Get-Content "$appsinstall_folder\apps.lst") {
    isowin_install_app $line
  }  
}

show_log_title "Executar script 'run.ps1' no pendrive?"

# tenta executar o scrip localizado no pendrive
if (Test-Path "$appsinstall_folder\run.ps1") {
  Write-Host "---&gt; Sim, executando..."
  pwsh.exe -NoProfile -Command "Get-Content -LiteralPath '$appsinstall_folder\run.ps1' -Raw | Invoke-Expression;" | write-host
}
else {
  Write-Host "---&gt; N&#xE3;o, n&#xE3;o localizado."
}

show_log_title "### Desabilitando Hiberna&#xE7;&#xE3;o."

try{
  powercfg.exe /hibernate off
}catch{
  write-host "---&gt; Falha ao desabilitar hiberna&#xE7;&#xE3;o."
}

write-host "CONCLUIDO"

Write-Host "-------------------------------------------------" -BackgroundColor blue
Write-Host "                   REINICIANDO                   " -BackgroundColor blue
Write-Host "-------------------------------------------------" -BackgroundColor blue

try {
  Stop-Transcript
}
catch {}

if (-Not ($env:USERNAME -eq "$env:COMPUTERNAME")) {
  if (-Not ($is_test)) {
    Restart-Computer
  }
}
		</File>
		<File path="C:\Windows\Setup\Scripts\unattend-06.cmd" transformation="Text">
REG ADD "HKEY_CURRENT_USER\Control Panel\Desktop\WindowMetrics" /v MinAnimate /t REG_SZ /d 0 /f
		</File>
		<File path="C:\Windows\Setup\Scripts\unattend-07.reg" transformation="Text">
Windows Registry Editor Version 5.00


;Apply the following registry values to disable the settings


;This is a must - set appearance options to "custom"
[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects]
"VisualFXSetting"=dword:2


;This disables the following 8 settings:
;Animate controls and elements inside windows
;Fade or slide menus into view
;Fade or slide ToolTips into view
;Fade out menu items after clicking
;Show shadows under mouse pointer
;Show shadows under windows
;Slide open combo boxes
;Smooth-scroll list boxes
[HKEY_CURRENT_USER\Control Panel\Desktop]
"UserPreferencesMask"=hex(2):90,12,03,80,10,00,00,00


;Animate windows when minimizing and maximizing
[HKEY_CURRENT_USER\Control Panel\Desktop\WindowMetrics]
"MinAnimate"="0"


;Animations in the taskbar
[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
"TaskbarAnimations"=dword:0


;Enable Peek
[HKEY_CURRENT_USER\Software\Microsoft\Windows\DWM]
"EnableAeroPeek"=dword:0


;Save taskbar thumbnail previews
[HKEY_CURRENT_USER\Software\Microsoft\Windows\DWM]
"AlwaysHibernateThumbnails"=dword:0


;Show thumbnails instead of icons
[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
"IconsOnly"=dword:1


;Show translucent selection rectangle
[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
"ListviewAlphaSelect"=dword:0


;Show window contents while dragging
[HKEY_CURRENT_USER\Control Panel\Desktop]
"DragFullWindows"="0"


;Smooth edges of screen fonts
[HKEY_CURRENT_USER\Control Panel\Desktop]
"FontSmoothing"="0"


;Use drop shadows for icon labels on the desktop
[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
"ListviewShadow"=dword:0

; end
		</File>
		<File path="C:\Windows\Setup\Scripts\Specialize.ps1" transformation="Text">
$scripts = @(
	{
		reg.exe add "HKLM\SYSTEM\Setup\MoSetup" /v AllowUpgradesWithUnsupportedTPMOrCPU /t REG_DWORD /d 1 /f;
	};
	{
		reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE" /v BypassNRO /t REG_DWORD /d 1 /f;
	};
	{
		Remove-Item -LiteralPath 'Registry::HKLM\Software\Microsoft\WindowsUpdate\Orchestrator\UScheduler_Oobe\DevHomeUpdate' -Force -ErrorAction 'SilentlyContinue';
	};
	{
		Remove-Item -LiteralPath 'C:\Users\Default\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OneDrive.lnk', 'C:\Windows\System32\OneDriveSetup.exe', 'C:\Windows\SysWOW64\OneDriveSetup.exe' -ErrorAction 'Continue';
	};
	{
		Remove-Item -LiteralPath 'Registry::HKLM\Software\Microsoft\WindowsUpdate\Orchestrator\UScheduler_Oobe\OutlookUpdate' -Force -ErrorAction 'SilentlyContinue';
	};
	{
		reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Communications" /v ConfigureChatAutoInstall /t REG_DWORD /d 0 /f;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\RemovePackages.ps1' -Raw | Invoke-Expression;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\RemoveCapabilities.ps1' -Raw | Invoke-Expression;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\RemoveFeatures.ps1' -Raw | Invoke-Expression;
	};
	{
		net.exe accounts /maxpwage:UNLIMITED;
	};
	{
		reg.exe add "HKLM\Software\Policies\Microsoft\Windows\CloudContent" /v "DisableCloudOptimizedContent" /t REG_DWORD /d 1 /f;
		[System.Diagnostics.EventLog]::CreateEventSource( 'UnattendGenerator', 'Application' );
	};
	{
		Register-ScheduledTask -TaskName 'UnlockStartLayout' -Xml $( Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\UnlockStartLayout.xml' -Raw );
	};
	{
		reg.exe add "HKLM\SYSTEM\CurrentControlSet\Control\FileSystem" /v LongPathsEnabled /t REG_DWORD /d 1 /f
	};
	{
		Set-ExecutionPolicy -Scope 'LocalMachine' -ExecutionPolicy 'RemoteSigned' -Force;
	};
	{
		reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" /v AUOptions /t REG_DWORD /d 4 /f;
		reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" /v NoAutoRebootWithLoggedOnUsers /t REG_DWORD /d 1 /f;
	};
	{
		Register-ScheduledTask -TaskName 'MoveActiveHours' -Xml $( Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\MoveActiveHours.xml' -Raw );
	};
	{
		reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Dsh" /v AllowNewsAndInterests /t REG_DWORD /d 0 /f;
	};
	{
		reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\LogonUI\BootAnimation" /v DisableStartupSound /t REG_DWORD /d 1 /f;
		reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\EditionOverrides" /v UserSetting_DisableStartupSound /t REG_DWORD /d 1 /f;
	};
	{
		reg.exe add "HKLM\Software\Policies\Microsoft\Windows\CloudContent" /v "DisableWindowsConsumerFeatures" /t REG_DWORD /d 0 /f;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\VBoxGuestAdditions.ps1' -Raw | Invoke-Expression;
	};
	{
		reg.exe add "HKLM\SYSTEM\CurrentControlSet\Control\BitLocker" /v "PreventDeviceEncryption" /t REG_DWORD /d 1 /f;
	};
	{
		reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Edge" /v HideFirstRunExperience /t REG_DWORD /d 1 /f;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\MakeEdgeUninstallable.ps1' -Raw | Invoke-Expression;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\SetStartPins.ps1' -Raw | Invoke-Expression;
	};
	{
		try {
		  $bytes = Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\GetWallpaper.ps1' -Raw | Invoke-Expression;
		  [System.IO.File]::WriteAllBytes( 'C:\Windows\Setup\Scripts\Wallpaper', $bytes );
		} catch {
		  $_;
		}
	};
	{
		C:\Windows\Setup\Scripts\unattend-01.cmd;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\unattend-02.ps1' -Raw | Invoke-Expression;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\unattend-03.ps1' -Raw | Invoke-Expression;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\unattend-04.ps1' -Raw | Invoke-Expression;
	};
);

&amp; {
	[float] $complete = 0;
	[float] $increment = 100 / $scripts.Count;
	foreach( $script in $scripts ) {
		Write-Progress -Activity 'Running scripts to customize your Windows installation. Do not close this window.' -PercentComplete $complete;
		&amp; $script;
		$complete += $increment;
	}
} *&gt;&amp;1 &gt;&gt; "C:\Windows\Setup\Scripts\Specialize.log";
		</File>
		<File path="C:\Windows\Setup\Scripts\UserOnce.ps1" transformation="Text">
$scripts = @(
	{
		Get-AppxPackage -Name 'Microsoft.Windows.Ai.Copilot.Provider' | Remove-AppxPackage;
	};
	{
		[System.Diagnostics.EventLog]::WriteEntry( 'UnattendGenerator', "User '$env:USERNAME' has requested to unlock the Start menu layout.", [System.Diagnostics.EventLogEntryType]::Information, 1 );
	};
	{
		Set-ItemProperty -LiteralPath 'Registry::HKCU\AppEvents\Schemes' -Name '(Default)' -Type 'String' -Value '.None';
	};
	{
		$params = @{
			Path = 'Registry::HKCU\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32';
			ErrorAction = 'SilentlyContinue';
			Force = $true;
		};
		New-Item @params;
		Set-ItemProperty @params -Name '(Default)' -Value '' -Type 'String';
	};
	{
		Set-ItemProperty -LiteralPath 'Registry::HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced' -Name 'LaunchTo' -Type 'DWord' -Value 1;
	};
	{
		Set-ItemProperty -LiteralPath 'Registry::HKCU\Software\Microsoft\Windows\CurrentVersion\Search' -Name 'SearchboxTaskbarMode' -Type 'DWord' -Value 0;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\SetColorTheme.ps1' -Raw | Invoke-Expression;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\SetWallpaper.ps1' -Raw | Invoke-Expression;
	};
	{
		C:\Windows\Setup\Scripts\unattend-06.cmd;
	};
	{
		reg.exe import "C:\Windows\Setup\Scripts\unattend-07.reg";
	};
	{
		Get-Process -Name 'explorer' -ErrorAction 'SilentlyContinue' | Where-Object -FilterScript {
			$_.SessionId -eq ( Get-Process -Id $PID ).SessionId;
		} | Stop-Process -Force;
	};
);

&amp; {
	[float] $complete = 0;
	[float] $increment = 100 / $scripts.Count;
	foreach( $script in $scripts ) {
		Write-Progress -Activity 'Running scripts to configure this user account. Do not close this window.' -PercentComplete $complete;
		&amp; $script;
		$complete += $increment;
	}
} *&gt;&amp;1 &gt;&gt; "$env:TEMP\UserOnce.log";
		</File>
		<File path="C:\Windows\Setup\Scripts\DefaultUser.ps1" transformation="Text">
$scripts = @(
	{
		reg.exe add "HKU\DefaultUser\Software\Policies\Microsoft\Windows\WindowsCopilot" /v TurnOffWindowsCopilot /t REG_DWORD /d 1 /f;
	};
	{
		Remove-ItemProperty -LiteralPath 'Registry::HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\Run' -Name 'OneDriveSetup' -Force -ErrorAction 'Continue';
	};
	{
		reg.exe add "HKU\DefaultUser\Software\Policies\Microsoft\Windows\Explorer" /v "StartLayoutFile" /t REG_SZ /d "C:\Windows\Setup\Scripts\TaskbarLayoutModification.xml" /f;
		reg.exe add "HKU\DefaultUser\Software\Policies\Microsoft\Windows\Explorer" /v "LockedStartLayout" /t REG_DWORD /d 1 /f;
	};
	{
		reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "HideFileExt" /t REG_DWORD /d 0 /f;
	};
	{
		reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "Hidden" /t REG_DWORD /d 1 /f;
	};
	{
		reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v ShowTaskViewButton /t REG_DWORD /d 0 /f;
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\TurnOffSystemSounds.ps1' -Raw | Invoke-Expression;
	};
	{
		$names = @(
		  'ContentDeliveryAllowed';
		  'FeatureManagementEnabled';
		  'OEMPreInstalledAppsEnabled';
		  'PreInstalledAppsEnabled';
		  'PreInstalledAppsEverEnabled';
		  'SilentInstalledAppsEnabled';
		  'SoftLandingEnabled';
		  'SubscribedContentEnabled';
		  'SubscribedContent-310093Enabled';
		  'SubscribedContent-338387Enabled';
		  'SubscribedContent-338388Enabled';
		  'SubscribedContent-338389Enabled';
		  'SubscribedContent-338393Enabled';
		  'SubscribedContent-353698Enabled';
		  'SystemPaneSuggestionsEnabled';
		);
		
		foreach( $name in $names ) {
		  reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v $name /t REG_DWORD /d 0 /f;
		}
	};
	{
		reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v TaskbarAl /t REG_DWORD /d 0 /f;
	};
	{
		foreach( $root in 'Registry::HKU\.DEFAULT', 'Registry::HKU\DefaultUser' ) {
		  Set-ItemProperty -LiteralPath "$root\Control Panel\Keyboard" -Name 'InitialKeyboardIndicators' -Type 'String' -Value 2 -Force;
		}
	};
	{
		$params = @{
		  LiteralPath = 'Registry::HKU\DefaultUser\Control Panel\Mouse';
		  Type = 'String';
		  Value = 0;
		  Force = $true;
		};
		Set-ItemProperty @params -Name 'MouseSpeed';
		Set-ItemProperty @params -Name 'MouseThreshold1';
		Set-ItemProperty @params -Name 'MouseThreshold2';
	};
	{
		reg.exe add "HKU\DefaultUser\Software\Policies\Microsoft\Windows\Explorer" /v DisableSearchBoxSuggestions /t REG_DWORD /d 1 /f;
	};
	{
		reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\DWM" /v ColorPrevalence /t REG_DWORD /d 1 /f;
	};
	{
		reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\RunOnce" /v "UnattendedSetup" /t REG_SZ /d "powershell.exe -NoProfile -Command \""Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\UserOnce.ps1' -Raw | Invoke-Expression;\""" /f;
	};
);

&amp; {
	[float] $complete = 0;
	[float] $increment = 100 / $scripts.Count;
	foreach( $script in $scripts ) {
		Write-Progress -Activity 'Running scripts to modify the default user&#x2019;&#x2019;s registry hive. Do not close this window.' -PercentComplete $complete;
		&amp; $script;
		$complete += $increment;
	}
} *&gt;&amp;1 &gt;&gt; "C:\Windows\Setup\Scripts\DefaultUser.log";
		</File>
		<File path="C:\Windows\Setup\Scripts\FirstLogon.ps1" transformation="Text">
$scripts = @(
	{
		Set-ItemProperty -LiteralPath 'Registry::HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon' -Name 'AutoLogonCount' -Type 'DWord' -Force -Value 0;
	};
	{
		Disable-ComputerRestore -Drive 'C:\';
	};
	{
		cmd.exe /c "rmdir C:\Windows.old";
	};
	{
		Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\unattend-05.ps1' -Raw | Invoke-Expression;
	};
);

&amp; {
	[float] $complete = 0;
	[float] $increment = 100 / $scripts.Count;
	foreach( $script in $scripts ) {
		Write-Progress -Activity 'Running scripts to finalize your Windows installation. Do not close this window.' -PercentComplete $complete;
		&amp; $script;
		$complete += $increment;
	}
} *&gt;&amp;1 &gt;&gt; "C:\Windows\Setup\Scripts\FirstLogon.log";
		</File>
	</Extensions>
</unattend>